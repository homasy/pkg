// patient_service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0--rc1
// source: patient_service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentMethod struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Type           string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CardNumber     string                 `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	ExpiryDate     string                 `protobuf:"bytes,3,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Cvv            string                 `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	SchemeProvider string                 `protobuf:"bytes,5,opt,name=scheme_provider,json=schemeProvider,proto3" json:"scheme_provider,omitempty"`
	SchemeId       string                 `protobuf:"bytes,6,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	mi := &file_patient_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentMethod) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentMethod) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *PaymentMethod) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *PaymentMethod) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *PaymentMethod) GetSchemeProvider() string {
	if x != nil {
		return x.SchemeProvider
	}
	return ""
}

func (x *PaymentMethod) GetSchemeId() string {
	if x != nil {
		return x.SchemeId
	}
	return ""
}

type PatientAllergy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Severity      string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Reaction      string                 `protobuf:"bytes,4,opt,name=reaction,proto3" json:"reaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatientAllergy) Reset() {
	*x = PatientAllergy{}
	mi := &file_patient_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatientAllergy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientAllergy) ProtoMessage() {}

func (x *PatientAllergy) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientAllergy.ProtoReflect.Descriptor instead.
func (*PatientAllergy) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{1}
}

func (x *PatientAllergy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatientAllergy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PatientAllergy) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *PatientAllergy) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

type EmergencyContact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Relationship  string                 `protobuf:"bytes,2,opt,name=relationship,proto3" json:"relationship,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Address       string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Gender        string                 `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmergencyContact) Reset() {
	*x = EmergencyContact{}
	mi := &file_patient_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmergencyContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmergencyContact) ProtoMessage() {}

func (x *EmergencyContact) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmergencyContact.ProtoReflect.Descriptor instead.
func (*EmergencyContact) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{2}
}

func (x *EmergencyContact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmergencyContact) GetRelationship() string {
	if x != nil {
		return x.Relationship
	}
	return ""
}

func (x *EmergencyContact) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *EmergencyContact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmergencyContact) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EmergencyContact) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type MedicalConditions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConditionName string                 `protobuf:"bytes,1,opt,name=condition_name,json=conditionName,proto3" json:"condition_name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Severity      string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Treatment     string                 `protobuf:"bytes,4,opt,name=treatment,proto3" json:"treatment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MedicalConditions) Reset() {
	*x = MedicalConditions{}
	mi := &file_patient_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedicalConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalConditions) ProtoMessage() {}

func (x *MedicalConditions) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalConditions.ProtoReflect.Descriptor instead.
func (*MedicalConditions) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{3}
}

func (x *MedicalConditions) GetConditionName() string {
	if x != nil {
		return x.ConditionName
	}
	return ""
}

func (x *MedicalConditions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MedicalConditions) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *MedicalConditions) GetTreatment() string {
	if x != nil {
		return x.Treatment
	}
	return ""
}

type AddPatientRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	FirstName              string                 `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName             string                 `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName               string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth            string                 `protobuf:"bytes,4,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Gender                 string                 `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Email                  string                 `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber            string                 `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address                string                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	BloodType              string                 `protobuf:"bytes,9,opt,name=blood_type,json=bloodType,proto3" json:"blood_type,omitempty"`
	FingerprintData        string                 `protobuf:"bytes,10,opt,name=fingerprint_data,json=fingerprintData,proto3" json:"fingerprint_data,omitempty"`
	SignatureData          string                 `protobuf:"bytes,11,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
	PhotoData              string                 `protobuf:"bytes,12,opt,name=photo_data,json=photoData,proto3" json:"photo_data,omitempty"`
	Status                 string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	PaymentMethods         []*PaymentMethod       `protobuf:"bytes,14,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	Allergies              []*PatientAllergy      `protobuf:"bytes,15,rep,name=allergies,proto3" json:"allergies,omitempty"`
	CreatedAt              string                 `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              string                 `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PatientId              string                 `protobuf:"bytes,18,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Nationality            string                 `protobuf:"bytes,19,opt,name=nationality,proto3" json:"nationality,omitempty"`
	NationalId             string                 `protobuf:"bytes,20,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	PassportNumber         string                 `protobuf:"bytes,21,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
	MaritalStatus          string                 `protobuf:"bytes,22,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	Occupation             string                 `protobuf:"bytes,23,opt,name=occupation,proto3" json:"occupation,omitempty"`
	EmergencyContacts      []*EmergencyContact    `protobuf:"bytes,24,rep,name=emergency_contacts,json=emergencyContacts,proto3" json:"emergency_contacts,omitempty"`
	KnownMedicalConditions []*MedicalConditions   `protobuf:"bytes,25,rep,name=known_medical_conditions,json=knownMedicalConditions,proto3" json:"known_medical_conditions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddPatientRequest) Reset() {
	*x = AddPatientRequest{}
	mi := &file_patient_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPatientRequest) ProtoMessage() {}

func (x *AddPatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPatientRequest.ProtoReflect.Descriptor instead.
func (*AddPatientRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{4}
}

func (x *AddPatientRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddPatientRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AddPatientRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddPatientRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *AddPatientRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *AddPatientRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddPatientRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AddPatientRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddPatientRequest) GetBloodType() string {
	if x != nil {
		return x.BloodType
	}
	return ""
}

func (x *AddPatientRequest) GetFingerprintData() string {
	if x != nil {
		return x.FingerprintData
	}
	return ""
}

func (x *AddPatientRequest) GetSignatureData() string {
	if x != nil {
		return x.SignatureData
	}
	return ""
}

func (x *AddPatientRequest) GetPhotoData() string {
	if x != nil {
		return x.PhotoData
	}
	return ""
}

func (x *AddPatientRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddPatientRequest) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *AddPatientRequest) GetAllergies() []*PatientAllergy {
	if x != nil {
		return x.Allergies
	}
	return nil
}

func (x *AddPatientRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AddPatientRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AddPatientRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddPatientRequest) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *AddPatientRequest) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *AddPatientRequest) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

func (x *AddPatientRequest) GetMaritalStatus() string {
	if x != nil {
		return x.MaritalStatus
	}
	return ""
}

func (x *AddPatientRequest) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *AddPatientRequest) GetEmergencyContacts() []*EmergencyContact {
	if x != nil {
		return x.EmergencyContacts
	}
	return nil
}

func (x *AddPatientRequest) GetKnownMedicalConditions() []*MedicalConditions {
	if x != nil {
		return x.KnownMedicalConditions
	}
	return nil
}

type AddPatientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPatientResponse) Reset() {
	*x = AddPatientResponse{}
	mi := &file_patient_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPatientResponse) ProtoMessage() {}

func (x *AddPatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPatientResponse.ProtoReflect.Descriptor instead.
func (*AddPatientResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{5}
}

func (x *AddPatientResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPatientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPatientRequest) Reset() {
	*x = GetPatientRequest{}
	mi := &file_patient_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientRequest) ProtoMessage() {}

func (x *GetPatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientRequest.ProtoReflect.Descriptor instead.
func (*GetPatientRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetPatientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPatientResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName              string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName             string                 `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName               string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth            string                 `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Gender                 string                 `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Email                  string                 `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber            string                 `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address                string                 `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	BloodType              string                 `protobuf:"bytes,10,opt,name=blood_type,json=bloodType,proto3" json:"blood_type,omitempty"`
	FingerprintData        string                 `protobuf:"bytes,11,opt,name=fingerprint_data,json=fingerprintData,proto3" json:"fingerprint_data,omitempty"`
	SignatureData          string                 `protobuf:"bytes,12,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
	PhotoData              string                 `protobuf:"bytes,13,opt,name=photo_data,json=photoData,proto3" json:"photo_data,omitempty"`
	Status                 string                 `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	PaymentMethods         []*PaymentMethod       `protobuf:"bytes,15,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	Allergies              []*PatientAllergy      `protobuf:"bytes,16,rep,name=allergies,proto3" json:"allergies,omitempty"`
	CreatedAt              string                 `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              string                 `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PatientId              string                 `protobuf:"bytes,19,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Nationality            string                 `protobuf:"bytes,20,opt,name=nationality,proto3" json:"nationality,omitempty"`
	NationalId             string                 `protobuf:"bytes,21,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	PassportNumber         string                 `protobuf:"bytes,22,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
	MaritalStatus          string                 `protobuf:"bytes,23,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	Occupation             string                 `protobuf:"bytes,24,opt,name=occupation,proto3" json:"occupation,omitempty"`
	EmergencyContacts      []*EmergencyContact    `protobuf:"bytes,25,rep,name=emergency_contacts,json=emergencyContacts,proto3" json:"emergency_contacts,omitempty"`
	KnownMedicalConditions []*MedicalConditions   `protobuf:"bytes,26,rep,name=known_medical_conditions,json=knownMedicalConditions,proto3" json:"known_medical_conditions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetPatientResponse) Reset() {
	*x = GetPatientResponse{}
	mi := &file_patient_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientResponse) ProtoMessage() {}

func (x *GetPatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientResponse.ProtoReflect.Descriptor instead.
func (*GetPatientResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPatientResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPatientResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetPatientResponse) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *GetPatientResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetPatientResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetPatientResponse) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetPatientResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetPatientResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetPatientResponse) GetBloodType() string {
	if x != nil {
		return x.BloodType
	}
	return ""
}

func (x *GetPatientResponse) GetFingerprintData() string {
	if x != nil {
		return x.FingerprintData
	}
	return ""
}

func (x *GetPatientResponse) GetSignatureData() string {
	if x != nil {
		return x.SignatureData
	}
	return ""
}

func (x *GetPatientResponse) GetPhotoData() string {
	if x != nil {
		return x.PhotoData
	}
	return ""
}

func (x *GetPatientResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetPatientResponse) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *GetPatientResponse) GetAllergies() []*PatientAllergy {
	if x != nil {
		return x.Allergies
	}
	return nil
}

func (x *GetPatientResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetPatientResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetPatientResponse) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *GetPatientResponse) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *GetPatientResponse) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *GetPatientResponse) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

func (x *GetPatientResponse) GetMaritalStatus() string {
	if x != nil {
		return x.MaritalStatus
	}
	return ""
}

func (x *GetPatientResponse) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *GetPatientResponse) GetEmergencyContacts() []*EmergencyContact {
	if x != nil {
		return x.EmergencyContacts
	}
	return nil
}

func (x *GetPatientResponse) GetKnownMedicalConditions() []*MedicalConditions {
	if x != nil {
		return x.KnownMedicalConditions
	}
	return nil
}

type UpdatePatientRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName              string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName             string                 `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName               string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth            string                 `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Gender                 string                 `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Email                  string                 `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber            string                 `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address                string                 `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	BloodType              string                 `protobuf:"bytes,10,opt,name=blood_type,json=bloodType,proto3" json:"blood_type,omitempty"`
	PaymentMethods         []*PaymentMethod       `protobuf:"bytes,11,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	Allergies              []*PatientAllergy      `protobuf:"bytes,12,rep,name=allergies,proto3" json:"allergies,omitempty"`
	FingerprintData        string                 `protobuf:"bytes,13,opt,name=fingerprint_data,json=fingerprintData,proto3" json:"fingerprint_data,omitempty"`
	SignatureData          string                 `protobuf:"bytes,14,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
	PhotoData              string                 `protobuf:"bytes,15,opt,name=photo_data,json=photoData,proto3" json:"photo_data,omitempty"`
	UpdatedAt              string                 `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status                 string                 `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	PatientId              string                 `protobuf:"bytes,18,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Nationality            string                 `protobuf:"bytes,19,opt,name=nationality,proto3" json:"nationality,omitempty"`
	NationalId             string                 `protobuf:"bytes,20,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	PassportNumber         string                 `protobuf:"bytes,21,opt,name=passport_number,json=passportNumber,proto3" json:"passport_number,omitempty"`
	MaritalStatus          string                 `protobuf:"bytes,22,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	Occupation             string                 `protobuf:"bytes,23,opt,name=occupation,proto3" json:"occupation,omitempty"`
	EmergencyContacts      []*EmergencyContact    `protobuf:"bytes,24,rep,name=emergency_contacts,json=emergencyContacts,proto3" json:"emergency_contacts,omitempty"`
	KnownMedicalConditions []*MedicalConditions   `protobuf:"bytes,25,rep,name=known_medical_conditions,json=knownMedicalConditions,proto3" json:"known_medical_conditions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdatePatientRequest) Reset() {
	*x = UpdatePatientRequest{}
	mi := &file_patient_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePatientRequest) ProtoMessage() {}

func (x *UpdatePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePatientRequest.ProtoReflect.Descriptor instead.
func (*UpdatePatientRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePatientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePatientRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdatePatientRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UpdatePatientRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdatePatientRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *UpdatePatientRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UpdatePatientRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdatePatientRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdatePatientRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdatePatientRequest) GetBloodType() string {
	if x != nil {
		return x.BloodType
	}
	return ""
}

func (x *UpdatePatientRequest) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *UpdatePatientRequest) GetAllergies() []*PatientAllergy {
	if x != nil {
		return x.Allergies
	}
	return nil
}

func (x *UpdatePatientRequest) GetFingerprintData() string {
	if x != nil {
		return x.FingerprintData
	}
	return ""
}

func (x *UpdatePatientRequest) GetSignatureData() string {
	if x != nil {
		return x.SignatureData
	}
	return ""
}

func (x *UpdatePatientRequest) GetPhotoData() string {
	if x != nil {
		return x.PhotoData
	}
	return ""
}

func (x *UpdatePatientRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UpdatePatientRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdatePatientRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *UpdatePatientRequest) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *UpdatePatientRequest) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *UpdatePatientRequest) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

func (x *UpdatePatientRequest) GetMaritalStatus() string {
	if x != nil {
		return x.MaritalStatus
	}
	return ""
}

func (x *UpdatePatientRequest) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *UpdatePatientRequest) GetEmergencyContacts() []*EmergencyContact {
	if x != nil {
		return x.EmergencyContacts
	}
	return nil
}

func (x *UpdatePatientRequest) GetKnownMedicalConditions() []*MedicalConditions {
	if x != nil {
		return x.KnownMedicalConditions
	}
	return nil
}

type UpdatePatientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePatientResponse) Reset() {
	*x = UpdatePatientResponse{}
	mi := &file_patient_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePatientResponse) ProtoMessage() {}

func (x *UpdatePatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePatientResponse.ProtoReflect.Descriptor instead.
func (*UpdatePatientResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePatientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeletePatientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePatientRequest) Reset() {
	*x = DeletePatientRequest{}
	mi := &file_patient_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePatientRequest) ProtoMessage() {}

func (x *DeletePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePatientRequest.ProtoReflect.Descriptor instead.
func (*DeletePatientRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePatientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePatientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePatientResponse) Reset() {
	*x = DeletePatientResponse{}
	mi := &file_patient_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePatientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePatientResponse) ProtoMessage() {}

func (x *DeletePatientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePatientResponse.ProtoReflect.Descriptor instead.
func (*DeletePatientResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeletePatientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListPatientsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPatientsRequest) Reset() {
	*x = ListPatientsRequest{}
	mi := &file_patient_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPatientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientsRequest) ProtoMessage() {}

func (x *ListPatientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientsRequest.ProtoReflect.Descriptor instead.
func (*ListPatientsRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{12}
}

type ListPatientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Patients      []*GetPatientResponse  `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPatientsResponse) Reset() {
	*x = ListPatientsResponse{}
	mi := &file_patient_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientsResponse) ProtoMessage() {}

func (x *ListPatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientsResponse.ProtoReflect.Descriptor instead.
func (*ListPatientsResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListPatientsResponse) GetPatients() []*GetPatientResponse {
	if x != nil {
		return x.Patients
	}
	return nil
}

type CheckDuplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber   string                 `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	NationalId    string                 `protobuf:"bytes,3,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	PatientId     string                 `protobuf:"bytes,4,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckDuplicateRequest) Reset() {
	*x = CheckDuplicateRequest{}
	mi := &file_patient_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDuplicateRequest) ProtoMessage() {}

func (x *CheckDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDuplicateRequest.ProtoReflect.Descriptor instead.
func (*CheckDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{14}
}

func (x *CheckDuplicateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CheckDuplicateRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CheckDuplicateRequest) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *CheckDuplicateRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type CheckDuplicateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDuplicate   bool                   `protobuf:"varint,1,opt,name=is_duplicate,json=isDuplicate,proto3" json:"is_duplicate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckDuplicateResponse) Reset() {
	*x = CheckDuplicateResponse{}
	mi := &file_patient_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDuplicateResponse) ProtoMessage() {}

func (x *CheckDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDuplicateResponse.ProtoReflect.Descriptor instead.
func (*CheckDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_patient_service_proto_rawDescGZIP(), []int{15}
}

func (x *CheckDuplicateResponse) GetIsDuplicate() bool {
	if x != nil {
		return x.IsDuplicate
	}
	return false
}

var File_patient_service_proto protoreflect.FileDescriptor

const file_patient_service_proto_rawDesc = "" +
	"\n" +
	"\x15patient_service.proto\x12\x0fpatient_service\x1a\x1cgoogle/api/annotations.proto\"\xbd\x01\n" +
	"\rPaymentMethod\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1f\n" +
	"\vcard_number\x18\x02 \x01(\tR\n" +
	"cardNumber\x12\x1f\n" +
	"\vexpiry_date\x18\x03 \x01(\tR\n" +
	"expiryDate\x12\x10\n" +
	"\x03cvv\x18\x04 \x01(\tR\x03cvv\x12'\n" +
	"\x0fscheme_provider\x18\x05 \x01(\tR\x0eschemeProvider\x12\x1b\n" +
	"\tscheme_id\x18\x06 \x01(\tR\bschemeId\"~\n" +
	"\x0ePatientAllergy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12\x1a\n" +
	"\breaction\x18\x04 \x01(\tR\breaction\"\xb5\x01\n" +
	"\x10EmergencyContact\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\frelationship\x18\x02 \x01(\tR\frelationship\x12!\n" +
	"\fphone_number\x18\x03 \x01(\tR\vphoneNumber\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddress\x12\x16\n" +
	"\x06gender\x18\x06 \x01(\tR\x06gender\"\x96\x01\n" +
	"\x11MedicalConditions\x12%\n" +
	"\x0econdition_name\x18\x01 \x01(\tR\rconditionName\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12\x1c\n" +
	"\ttreatment\x18\x04 \x01(\tR\ttreatment\"\xef\a\n" +
	"\x11AddPatientRequest\x12\x1d\n" +
	"\n" +
	"first_name\x18\x01 \x01(\tR\tfirstName\x12\x1f\n" +
	"\vmiddle_name\x18\x02 \x01(\tR\n" +
	"middleName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\"\n" +
	"\rdate_of_birth\x18\x04 \x01(\tR\vdateOfBirth\x12\x16\n" +
	"\x06gender\x18\x05 \x01(\tR\x06gender\x12\x14\n" +
	"\x05email\x18\x06 \x01(\tR\x05email\x12!\n" +
	"\fphone_number\x18\a \x01(\tR\vphoneNumber\x12\x18\n" +
	"\aaddress\x18\b \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"blood_type\x18\t \x01(\tR\tbloodType\x12)\n" +
	"\x10fingerprint_data\x18\n" +
	" \x01(\tR\x0ffingerprintData\x12%\n" +
	"\x0esignature_data\x18\v \x01(\tR\rsignatureData\x12\x1d\n" +
	"\n" +
	"photo_data\x18\f \x01(\tR\tphotoData\x12\x16\n" +
	"\x06status\x18\r \x01(\tR\x06status\x12G\n" +
	"\x0fpayment_methods\x18\x0e \x03(\v2\x1e.patient_service.PaymentMethodR\x0epaymentMethods\x12=\n" +
	"\tallergies\x18\x0f \x03(\v2\x1f.patient_service.PatientAllergyR\tallergies\x12\x1d\n" +
	"\n" +
	"created_at\x18\x10 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x11 \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x12 \x01(\tR\tpatientId\x12 \n" +
	"\vnationality\x18\x13 \x01(\tR\vnationality\x12\x1f\n" +
	"\vnational_id\x18\x14 \x01(\tR\n" +
	"nationalId\x12'\n" +
	"\x0fpassport_number\x18\x15 \x01(\tR\x0epassportNumber\x12%\n" +
	"\x0emarital_status\x18\x16 \x01(\tR\rmaritalStatus\x12\x1e\n" +
	"\n" +
	"occupation\x18\x17 \x01(\tR\n" +
	"occupation\x12P\n" +
	"\x12emergency_contacts\x18\x18 \x03(\v2!.patient_service.EmergencyContactR\x11emergencyContacts\x12\\\n" +
	"\x18known_medical_conditions\x18\x19 \x03(\v2\".patient_service.MedicalConditionsR\x16knownMedicalConditions\"$\n" +
	"\x12AddPatientResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"#\n" +
	"\x11GetPatientRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x80\b\n" +
	"\x12GetPatientResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1f\n" +
	"\vmiddle_name\x18\x03 \x01(\tR\n" +
	"middleName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\"\n" +
	"\rdate_of_birth\x18\x05 \x01(\tR\vdateOfBirth\x12\x16\n" +
	"\x06gender\x18\x06 \x01(\tR\x06gender\x12\x14\n" +
	"\x05email\x18\a \x01(\tR\x05email\x12!\n" +
	"\fphone_number\x18\b \x01(\tR\vphoneNumber\x12\x18\n" +
	"\aaddress\x18\t \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"blood_type\x18\n" +
	" \x01(\tR\tbloodType\x12)\n" +
	"\x10fingerprint_data\x18\v \x01(\tR\x0ffingerprintData\x12%\n" +
	"\x0esignature_data\x18\f \x01(\tR\rsignatureData\x12\x1d\n" +
	"\n" +
	"photo_data\x18\r \x01(\tR\tphotoData\x12\x16\n" +
	"\x06status\x18\x0e \x01(\tR\x06status\x12G\n" +
	"\x0fpayment_methods\x18\x0f \x03(\v2\x1e.patient_service.PaymentMethodR\x0epaymentMethods\x12=\n" +
	"\tallergies\x18\x10 \x03(\v2\x1f.patient_service.PatientAllergyR\tallergies\x12\x1d\n" +
	"\n" +
	"created_at\x18\x11 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x12 \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x13 \x01(\tR\tpatientId\x12 \n" +
	"\vnationality\x18\x14 \x01(\tR\vnationality\x12\x1f\n" +
	"\vnational_id\x18\x15 \x01(\tR\n" +
	"nationalId\x12'\n" +
	"\x0fpassport_number\x18\x16 \x01(\tR\x0epassportNumber\x12%\n" +
	"\x0emarital_status\x18\x17 \x01(\tR\rmaritalStatus\x12\x1e\n" +
	"\n" +
	"occupation\x18\x18 \x01(\tR\n" +
	"occupation\x12P\n" +
	"\x12emergency_contacts\x18\x19 \x03(\v2!.patient_service.EmergencyContactR\x11emergencyContacts\x12\\\n" +
	"\x18known_medical_conditions\x18\x1a \x03(\v2\".patient_service.MedicalConditionsR\x16knownMedicalConditions\"\xe3\a\n" +
	"\x14UpdatePatientRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1f\n" +
	"\vmiddle_name\x18\x03 \x01(\tR\n" +
	"middleName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\"\n" +
	"\rdate_of_birth\x18\x05 \x01(\tR\vdateOfBirth\x12\x16\n" +
	"\x06gender\x18\x06 \x01(\tR\x06gender\x12\x14\n" +
	"\x05email\x18\a \x01(\tR\x05email\x12!\n" +
	"\fphone_number\x18\b \x01(\tR\vphoneNumber\x12\x18\n" +
	"\aaddress\x18\t \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"blood_type\x18\n" +
	" \x01(\tR\tbloodType\x12G\n" +
	"\x0fpayment_methods\x18\v \x03(\v2\x1e.patient_service.PaymentMethodR\x0epaymentMethods\x12=\n" +
	"\tallergies\x18\f \x03(\v2\x1f.patient_service.PatientAllergyR\tallergies\x12)\n" +
	"\x10fingerprint_data\x18\r \x01(\tR\x0ffingerprintData\x12%\n" +
	"\x0esignature_data\x18\x0e \x01(\tR\rsignatureData\x12\x1d\n" +
	"\n" +
	"photo_data\x18\x0f \x01(\tR\tphotoData\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\tR\tupdatedAt\x12\x16\n" +
	"\x06status\x18\x11 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x12 \x01(\tR\tpatientId\x12 \n" +
	"\vnationality\x18\x13 \x01(\tR\vnationality\x12\x1f\n" +
	"\vnational_id\x18\x14 \x01(\tR\n" +
	"nationalId\x12'\n" +
	"\x0fpassport_number\x18\x15 \x01(\tR\x0epassportNumber\x12%\n" +
	"\x0emarital_status\x18\x16 \x01(\tR\rmaritalStatus\x12\x1e\n" +
	"\n" +
	"occupation\x18\x17 \x01(\tR\n" +
	"occupation\x12P\n" +
	"\x12emergency_contacts\x18\x18 \x03(\v2!.patient_service.EmergencyContactR\x11emergencyContacts\x12\\\n" +
	"\x18known_medical_conditions\x18\x19 \x03(\v2\".patient_service.MedicalConditionsR\x16knownMedicalConditions\"1\n" +
	"\x15UpdatePatientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"&\n" +
	"\x14DeletePatientRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x15DeletePatientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x15\n" +
	"\x13ListPatientsRequest\"W\n" +
	"\x14ListPatientsResponse\x12?\n" +
	"\bpatients\x18\x01 \x03(\v2#.patient_service.GetPatientResponseR\bpatients\"\x90\x01\n" +
	"\x15CheckDuplicateRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12!\n" +
	"\fphone_number\x18\x02 \x01(\tR\vphoneNumber\x12\x1f\n" +
	"\vnational_id\x18\x03 \x01(\tR\n" +
	"nationalId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x04 \x01(\tR\tpatientId\";\n" +
	"\x16CheckDuplicateResponse\x12!\n" +
	"\fis_duplicate\x18\x01 \x01(\bR\visDuplicate2\xeb\x05\n" +
	"\x0ePatientService\x12n\n" +
	"\n" +
	"AddPatient\x12\".patient_service.AddPatientRequest\x1a#.patient_service.AddPatientResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/patients\x12p\n" +
	"\n" +
	"GetPatient\x12\".patient_service.GetPatientRequest\x1a#.patient_service.GetPatientResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/patients/{id}\x12|\n" +
	"\rUpdatePatient\x12%.patient_service.UpdatePatientRequest\x1a&.patient_service.UpdatePatientResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\x1a\x11/v1/patients/{id}\x12y\n" +
	"\rDeletePatient\x12%.patient_service.DeletePatientRequest\x1a&.patient_service.DeletePatientResponse\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/patients/{id}\x12q\n" +
	"\fListPatients\x12$.patient_service.ListPatientsRequest\x1a%.patient_service.ListPatientsResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/patients\x12\x8a\x01\n" +
	"\x0eCheckDuplicate\x12&.patient_service.CheckDuplicateRequest\x1a'.patient_service.CheckDuplicateResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/patients/check-duplicateB\"Z ./services/patient-service/protob\x06proto3"

var (
	file_patient_service_proto_rawDescOnce sync.Once
	file_patient_service_proto_rawDescData []byte
)

func file_patient_service_proto_rawDescGZIP() []byte {
	file_patient_service_proto_rawDescOnce.Do(func() {
		file_patient_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_patient_service_proto_rawDesc), len(file_patient_service_proto_rawDesc)))
	})
	return file_patient_service_proto_rawDescData
}

var file_patient_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_patient_service_proto_goTypes = []any{
	(*PaymentMethod)(nil),          // 0: patient_service.PaymentMethod
	(*PatientAllergy)(nil),         // 1: patient_service.PatientAllergy
	(*EmergencyContact)(nil),       // 2: patient_service.EmergencyContact
	(*MedicalConditions)(nil),      // 3: patient_service.MedicalConditions
	(*AddPatientRequest)(nil),      // 4: patient_service.AddPatientRequest
	(*AddPatientResponse)(nil),     // 5: patient_service.AddPatientResponse
	(*GetPatientRequest)(nil),      // 6: patient_service.GetPatientRequest
	(*GetPatientResponse)(nil),     // 7: patient_service.GetPatientResponse
	(*UpdatePatientRequest)(nil),   // 8: patient_service.UpdatePatientRequest
	(*UpdatePatientResponse)(nil),  // 9: patient_service.UpdatePatientResponse
	(*DeletePatientRequest)(nil),   // 10: patient_service.DeletePatientRequest
	(*DeletePatientResponse)(nil),  // 11: patient_service.DeletePatientResponse
	(*ListPatientsRequest)(nil),    // 12: patient_service.ListPatientsRequest
	(*ListPatientsResponse)(nil),   // 13: patient_service.ListPatientsResponse
	(*CheckDuplicateRequest)(nil),  // 14: patient_service.CheckDuplicateRequest
	(*CheckDuplicateResponse)(nil), // 15: patient_service.CheckDuplicateResponse
}
var file_patient_service_proto_depIdxs = []int32{
	0,  // 0: patient_service.AddPatientRequest.payment_methods:type_name -> patient_service.PaymentMethod
	1,  // 1: patient_service.AddPatientRequest.allergies:type_name -> patient_service.PatientAllergy
	2,  // 2: patient_service.AddPatientRequest.emergency_contacts:type_name -> patient_service.EmergencyContact
	3,  // 3: patient_service.AddPatientRequest.known_medical_conditions:type_name -> patient_service.MedicalConditions
	0,  // 4: patient_service.GetPatientResponse.payment_methods:type_name -> patient_service.PaymentMethod
	1,  // 5: patient_service.GetPatientResponse.allergies:type_name -> patient_service.PatientAllergy
	2,  // 6: patient_service.GetPatientResponse.emergency_contacts:type_name -> patient_service.EmergencyContact
	3,  // 7: patient_service.GetPatientResponse.known_medical_conditions:type_name -> patient_service.MedicalConditions
	0,  // 8: patient_service.UpdatePatientRequest.payment_methods:type_name -> patient_service.PaymentMethod
	1,  // 9: patient_service.UpdatePatientRequest.allergies:type_name -> patient_service.PatientAllergy
	2,  // 10: patient_service.UpdatePatientRequest.emergency_contacts:type_name -> patient_service.EmergencyContact
	3,  // 11: patient_service.UpdatePatientRequest.known_medical_conditions:type_name -> patient_service.MedicalConditions
	7,  // 12: patient_service.ListPatientsResponse.patients:type_name -> patient_service.GetPatientResponse
	4,  // 13: patient_service.PatientService.AddPatient:input_type -> patient_service.AddPatientRequest
	6,  // 14: patient_service.PatientService.GetPatient:input_type -> patient_service.GetPatientRequest
	8,  // 15: patient_service.PatientService.UpdatePatient:input_type -> patient_service.UpdatePatientRequest
	10, // 16: patient_service.PatientService.DeletePatient:input_type -> patient_service.DeletePatientRequest
	12, // 17: patient_service.PatientService.ListPatients:input_type -> patient_service.ListPatientsRequest
	14, // 18: patient_service.PatientService.CheckDuplicate:input_type -> patient_service.CheckDuplicateRequest
	5,  // 19: patient_service.PatientService.AddPatient:output_type -> patient_service.AddPatientResponse
	7,  // 20: patient_service.PatientService.GetPatient:output_type -> patient_service.GetPatientResponse
	9,  // 21: patient_service.PatientService.UpdatePatient:output_type -> patient_service.UpdatePatientResponse
	11, // 22: patient_service.PatientService.DeletePatient:output_type -> patient_service.DeletePatientResponse
	13, // 23: patient_service.PatientService.ListPatients:output_type -> patient_service.ListPatientsResponse
	15, // 24: patient_service.PatientService.CheckDuplicate:output_type -> patient_service.CheckDuplicateResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_patient_service_proto_init() }
func file_patient_service_proto_init() {
	if File_patient_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_patient_service_proto_rawDesc), len(file_patient_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_patient_service_proto_goTypes,
		DependencyIndexes: file_patient_service_proto_depIdxs,
		MessageInfos:      file_patient_service_proto_msgTypes,
	}.Build()
	File_patient_service_proto = out.File
	file_patient_service_proto_goTypes = nil
	file_patient_service_proto_depIdxs = nil
}
