// chat_service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0--rc1
// source: chat_service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message types
type MessageType int32

const (
	MessageType_TEXT   MessageType = 0
	MessageType_IMAGE  MessageType = 1
	MessageType_FILE   MessageType = 2
	MessageType_SYSTEM MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "FILE",
		3: "SYSTEM",
	}
	MessageType_value = map[string]int32{
		"TEXT":   0,
		"IMAGE":  1,
		"FILE":   2,
		"SYSTEM": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_service_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_chat_service_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{0}
}

// User status types
type UserStatus int32

const (
	UserStatus_ONLINE  UserStatus = 0
	UserStatus_AWAY    UserStatus = 1
	UserStatus_BUSY    UserStatus = 2
	UserStatus_OFFLINE UserStatus = 3
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "ONLINE",
		1: "AWAY",
		2: "BUSY",
		3: "OFFLINE",
	}
	UserStatus_value = map[string]int32{
		"ONLINE":  0,
		"AWAY":    1,
		"BUSY":    2,
		"OFFLINE": 3,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_service_proto_enumTypes[1].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_chat_service_proto_enumTypes[1]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{1}
}

type StreamUpdate_UpdateType int32

const (
	StreamUpdate_NEW_MESSAGE         StreamUpdate_UpdateType = 0
	StreamUpdate_MESSAGE_READ        StreamUpdate_UpdateType = 1
	StreamUpdate_MESSAGE_EDITED      StreamUpdate_UpdateType = 2
	StreamUpdate_MESSAGE_DELETED     StreamUpdate_UpdateType = 3
	StreamUpdate_USER_STATUS_CHANGED StreamUpdate_UpdateType = 4
	StreamUpdate_USER_TYPING         StreamUpdate_UpdateType = 5
	StreamUpdate_GROUP_CREATED       StreamUpdate_UpdateType = 6
	StreamUpdate_GROUP_UPDATED       StreamUpdate_UpdateType = 7
)

// Enum value maps for StreamUpdate_UpdateType.
var (
	StreamUpdate_UpdateType_name = map[int32]string{
		0: "NEW_MESSAGE",
		1: "MESSAGE_READ",
		2: "MESSAGE_EDITED",
		3: "MESSAGE_DELETED",
		4: "USER_STATUS_CHANGED",
		5: "USER_TYPING",
		6: "GROUP_CREATED",
		7: "GROUP_UPDATED",
	}
	StreamUpdate_UpdateType_value = map[string]int32{
		"NEW_MESSAGE":         0,
		"MESSAGE_READ":        1,
		"MESSAGE_EDITED":      2,
		"MESSAGE_DELETED":     3,
		"USER_STATUS_CHANGED": 4,
		"USER_TYPING":         5,
		"GROUP_CREATED":       6,
		"GROUP_UPDATED":       7,
	}
)

func (x StreamUpdate_UpdateType) Enum() *StreamUpdate_UpdateType {
	p := new(StreamUpdate_UpdateType)
	*p = x
	return p
}

func (x StreamUpdate_UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamUpdate_UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_service_proto_enumTypes[2].Descriptor()
}

func (StreamUpdate_UpdateType) Type() protoreflect.EnumType {
	return &file_chat_service_proto_enumTypes[2]
}

func (x StreamUpdate_UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamUpdate_UpdateType.Descriptor instead.
func (StreamUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{31, 0}
}

// Message model
type Message struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MessageId      string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SenderId       string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp      string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRead         bool                   `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	IsEdited       bool                   `protobuf:"varint,7,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	Type           MessageType            `protobuf:"varint,8,opt,name=type,proto3,enum=chat_service.MessageType" json:"type,omitempty"`
	ReadBy         []string               `protobuf:"bytes,9,rep,name=read_by,json=readBy,proto3" json:"read_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chat_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Message) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Message) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

func (x *Message) GetReadBy() []string {
	if x != nil {
		return x.ReadBy
	}
	return nil
}

// Conversation model
type Conversation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId_1       string                 `protobuf:"bytes,2,opt,name=user_id_1,json=userId1,proto3" json:"user_id_1,omitempty"`
	UserId_2       string                 `protobuf:"bytes,3,opt,name=user_id_2,json=userId2,proto3" json:"user_id_2,omitempty"`
	LastActivity   string                 `protobuf:"bytes,4,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	UnreadCount    int32                  `protobuf:"varint,5,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_chat_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{1}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetUserId_1() string {
	if x != nil {
		return x.UserId_1
	}
	return ""
}

func (x *Conversation) GetUserId_2() string {
	if x != nil {
		return x.UserId_2
	}
	return ""
}

func (x *Conversation) GetLastActivity() string {
	if x != nil {
		return x.LastActivity
	}
	return ""
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// Group model
type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Members       []string               `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_chat_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{2}
}

func (x *Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Group) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Group) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Group) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// User model (simplified for chat service)
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Online        bool                   `protobuf:"varint,3,opt,name=online,proto3" json:"online,omitempty"`
	Avatar        string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Status        UserStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=chat_service.UserStatus" json:"status,omitempty"`
	Typing        bool                   `protobuf:"varint,6,opt,name=typing,proto3" json:"typing,omitempty"`
	LastSeen      string                 `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Role          string                 `protobuf:"bytes,8,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_chat_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_ONLINE
}

func (x *User) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

func (x *User) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// SendMessage
type SendMessageRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SenderId       string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type           MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=chat_service.MessageType" json:"type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_chat_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_chat_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// GetMessage
type GetMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageRequest) Reset() {
	*x = GetMessageRequest{}
	mi := &file_chat_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageRequest) ProtoMessage() {}

func (x *GetMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageRequest.ProtoReflect.Descriptor instead.
func (*GetMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type GetMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageResponse) Reset() {
	*x = GetMessageResponse{}
	mi := &file_chat_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageResponse) ProtoMessage() {}

func (x *GetMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageResponse.ProtoReflect.Descriptor instead.
func (*GetMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// DeleteMessage
type DeleteMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_chat_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DeleteMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_chat_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// EditMessage
type EditMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // For authorization
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditMessageRequest) Reset() {
	*x = EditMessageRequest{}
	mi := &file_chat_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageRequest) ProtoMessage() {}

func (x *EditMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageRequest.ProtoReflect.Descriptor instead.
func (*EditMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{10}
}

func (x *EditMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *EditMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EditMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditMessageResponse) Reset() {
	*x = EditMessageResponse{}
	mi := &file_chat_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageResponse) ProtoMessage() {}

func (x *EditMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageResponse.ProtoReflect.Descriptor instead.
func (*EditMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{11}
}

func (x *EditMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// GetConversationMessages
type GetConversationMessagesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Limit          int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationMessagesRequest) Reset() {
	*x = GetConversationMessagesRequest{}
	mi := &file_chat_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMessagesRequest) ProtoMessage() {}

func (x *GetConversationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetConversationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetConversationMessagesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetConversationMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetConversationMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetConversationMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMessagesResponse) Reset() {
	*x = GetConversationMessagesResponse{}
	mi := &file_chat_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMessagesResponse) ProtoMessage() {}

func (x *GetConversationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetConversationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetConversationMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

// CreateConversation
type CreateConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId_1      string                 `protobuf:"bytes,1,opt,name=user_id_1,json=userId1,proto3" json:"user_id_1,omitempty"`
	UserId_2      string                 `protobuf:"bytes,2,opt,name=user_id_2,json=userId2,proto3" json:"user_id_2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	mi := &file_chat_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateConversationRequest) GetUserId_1() string {
	if x != nil {
		return x.UserId_1
	}
	return ""
}

func (x *CreateConversationRequest) GetUserId_2() string {
	if x != nil {
		return x.UserId_2
	}
	return ""
}

type CreateConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationResponse) Reset() {
	*x = CreateConversationResponse{}
	mi := &file_chat_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResponse) ProtoMessage() {}

func (x *CreateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// GetConversation
type GetConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_chat_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type GetConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	mi := &file_chat_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// ListUserConversations
type ListUserConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserConversationsRequest) Reset() {
	*x = ListUserConversationsRequest{}
	mi := &file_chat_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConversationsRequest) ProtoMessage() {}

func (x *ListUserConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListUserConversationsRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListUserConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListUserConversationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserConversationsResponse) Reset() {
	*x = ListUserConversationsResponse{}
	mi := &file_chat_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConversationsResponse) ProtoMessage() {}

func (x *ListUserConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConversationsResponse.ProtoReflect.Descriptor instead.
func (*ListUserConversationsResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

// CreateGroup
type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Members       []string               `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_chat_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateGroupRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         *Group                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	mi := &file_chat_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// GetGroup
type GetGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	mi := &file_chat_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         *Group                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupResponse) Reset() {
	*x = GetGroupResponse{}
	mi := &file_chat_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResponse) ProtoMessage() {}

func (x *GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// AddUserToGroup
type AddUserToGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AddedBy       string                 `protobuf:"bytes,3,opt,name=added_by,json=addedBy,proto3" json:"added_by,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserToGroupRequest) Reset() {
	*x = AddUserToGroupRequest{}
	mi := &file_chat_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToGroupRequest) ProtoMessage() {}

func (x *AddUserToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddUserToGroupRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{24}
}

func (x *AddUserToGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddUserToGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserToGroupRequest) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

type AddUserToGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserToGroupResponse) Reset() {
	*x = AddUserToGroupResponse{}
	mi := &file_chat_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToGroupResponse) ProtoMessage() {}

func (x *AddUserToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToGroupResponse.ProtoReflect.Descriptor instead.
func (*AddUserToGroupResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{25}
}

func (x *AddUserToGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// RemoveUserFromGroup
type RemoveUserFromGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RemovedBy     string                 `protobuf:"bytes,3,opt,name=removed_by,json=removedBy,proto3" json:"removed_by,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveUserFromGroupRequest) Reset() {
	*x = RemoveUserFromGroupRequest{}
	mi := &file_chat_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveUserFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFromGroupRequest) ProtoMessage() {}

func (x *RemoveUserFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFromGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserFromGroupRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveUserFromGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveUserFromGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveUserFromGroupRequest) GetRemovedBy() string {
	if x != nil {
		return x.RemovedBy
	}
	return ""
}

type RemoveUserFromGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveUserFromGroupResponse) Reset() {
	*x = RemoveUserFromGroupResponse{}
	mi := &file_chat_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveUserFromGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFromGroupResponse) ProtoMessage() {}

func (x *RemoveUserFromGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFromGroupResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserFromGroupResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveUserFromGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ListUserGroups
type ListUserGroupsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserGroupsRequest) Reset() {
	*x = ListUserGroupsRequest{}
	mi := &file_chat_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupsRequest) ProtoMessage() {}

func (x *ListUserGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupsRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListUserGroupsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListUserGroupsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*Group               `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserGroupsResponse) Reset() {
	*x = ListUserGroupsResponse{}
	mi := &file_chat_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupsResponse) ProtoMessage() {}

func (x *ListUserGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupsResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListUserGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// StreamUpdates
type StreamUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamUpdatesRequest) Reset() {
	*x = StreamUpdatesRequest{}
	mi := &file_chat_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUpdatesRequest) ProtoMessage() {}

func (x *StreamUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUpdatesRequest.ProtoReflect.Descriptor instead.
func (*StreamUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{30}
}

func (x *StreamUpdatesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type StreamUpdate struct {
	state     protoimpl.MessageState  `protogen:"open.v1"`
	Type      StreamUpdate_UpdateType `protobuf:"varint,1,opt,name=type,proto3,enum=chat_service.StreamUpdate_UpdateType" json:"type,omitempty"`
	Timestamp string                  `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// One of the following will be set based on the update type
	Message        *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	User           *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Group          *Group   `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	ConversationId string   `protobuf:"bytes,6,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamUpdate) Reset() {
	*x = StreamUpdate{}
	mi := &file_chat_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUpdate) ProtoMessage() {}

func (x *StreamUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUpdate.ProtoReflect.Descriptor instead.
func (*StreamUpdate) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{31}
}

func (x *StreamUpdate) GetType() StreamUpdate_UpdateType {
	if x != nil {
		return x.Type
	}
	return StreamUpdate_NEW_MESSAGE
}

func (x *StreamUpdate) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *StreamUpdate) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *StreamUpdate) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *StreamUpdate) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *StreamUpdate) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// UpdateUserStatus
type UpdateUserStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        UserStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=chat_service.UserStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserStatusRequest) Reset() {
	*x = UpdateUserStatusRequest{}
	mi := &file_chat_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusRequest) ProtoMessage() {}

func (x *UpdateUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserStatusRequest) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_ONLINE
}

type UpdateUserStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserStatusResponse) Reset() {
	*x = UpdateUserStatusResponse{}
	mi := &file_chat_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatusResponse) ProtoMessage() {}

func (x *UpdateUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateUserStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// MarkMessageAsRead
type MarkMessageAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMessageAsReadRequest) Reset() {
	*x = MarkMessageAsReadRequest{}
	mi := &file_chat_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessageAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessageAsReadRequest) ProtoMessage() {}

func (x *MarkMessageAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessageAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkMessageAsReadRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{34}
}

func (x *MarkMessageAsReadRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MarkMessageAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkMessageAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMessageAsReadResponse) Reset() {
	*x = MarkMessageAsReadResponse{}
	mi := &file_chat_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessageAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessageAsReadResponse) ProtoMessage() {}

func (x *MarkMessageAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessageAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkMessageAsReadResponse) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{35}
}

func (x *MarkMessageAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_chat_service_proto protoreflect.FileDescriptor

const file_chat_service_proto_rawDesc = "" +
	"\n" +
	"\x12chat_service.proto\x12\fchat_service\x1a\x1cgoogle/api/annotations.proto\"\xa4\x02\n" +
	"\aMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12'\n" +
	"\x0fconversation_id\x18\x03 \x01(\tR\x0econversationId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\x12\x17\n" +
	"\ais_read\x18\x06 \x01(\bR\x06isRead\x12\x1b\n" +
	"\tis_edited\x18\a \x01(\bR\bisEdited\x12-\n" +
	"\x04type\x18\b \x01(\x0e2\x19.chat_service.MessageTypeR\x04type\x12\x17\n" +
	"\aread_by\x18\t \x03(\tR\x06readBy\"\xb7\x01\n" +
	"\fConversation\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x1a\n" +
	"\tuser_id_1\x18\x02 \x01(\tR\auserId1\x12\x1a\n" +
	"\tuser_id_2\x18\x03 \x01(\tR\auserId2\x12#\n" +
	"\rlast_activity\x18\x04 \x01(\tR\flastActivity\x12!\n" +
	"\funread_count\x18\x05 \x01(\x05R\vunreadCount\"\xab\x01\n" +
	"\x05Group\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\amembers\x18\x03 \x03(\tR\amembers\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\"\xde\x01\n" +
	"\x04User\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06online\x18\x03 \x01(\bR\x06online\x12\x16\n" +
	"\x06avatar\x18\x04 \x01(\tR\x06avatar\x120\n" +
	"\x06status\x18\x05 \x01(\x0e2\x18.chat_service.UserStatusR\x06status\x12\x16\n" +
	"\x06typing\x18\x06 \x01(\bR\x06typing\x12\x1b\n" +
	"\tlast_seen\x18\a \x01(\tR\blastSeen\x12\x12\n" +
	"\x04role\x18\b \x01(\tR\x04role\"\xa3\x01\n" +
	"\x12SendMessageRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12-\n" +
	"\x04type\x18\x04 \x01(\x0e2\x19.chat_service.MessageTypeR\x04type\"F\n" +
	"\x13SendMessageResponse\x12/\n" +
	"\amessage\x18\x01 \x01(\v2\x15.chat_service.MessageR\amessage\"2\n" +
	"\x11GetMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"E\n" +
	"\x12GetMessageResponse\x12/\n" +
	"\amessage\x18\x01 \x01(\v2\x15.chat_service.MessageR\amessage\"N\n" +
	"\x14DeleteMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"1\n" +
	"\x15DeleteMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"f\n" +
	"\x12EditMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"F\n" +
	"\x13EditMessageResponse\x12/\n" +
	"\amessage\x18\x01 \x01(\v2\x15.chat_service.MessageR\amessage\"w\n" +
	"\x1eGetConversationMessagesRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"T\n" +
	"\x1fGetConversationMessagesResponse\x121\n" +
	"\bmessages\x18\x01 \x03(\v2\x15.chat_service.MessageR\bmessages\"S\n" +
	"\x19CreateConversationRequest\x12\x1a\n" +
	"\tuser_id_1\x18\x01 \x01(\tR\auserId1\x12\x1a\n" +
	"\tuser_id_2\x18\x02 \x01(\tR\auserId2\"\\\n" +
	"\x1aCreateConversationResponse\x12>\n" +
	"\fconversation\x18\x01 \x01(\v2\x1a.chat_service.ConversationR\fconversation\"A\n" +
	"\x16GetConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\"Y\n" +
	"\x17GetConversationResponse\x12>\n" +
	"\fconversation\x18\x01 \x01(\v2\x1a.chat_service.ConversationR\fconversation\"7\n" +
	"\x1cListUserConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"a\n" +
	"\x1dListUserConversationsResponse\x12@\n" +
	"\rconversations\x18\x01 \x03(\v2\x1a.chat_service.ConversationR\rconversations\"a\n" +
	"\x12CreateGroupRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\amembers\x18\x02 \x03(\tR\amembers\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\"@\n" +
	"\x13CreateGroupResponse\x12)\n" +
	"\x05group\x18\x01 \x01(\v2\x13.chat_service.GroupR\x05group\",\n" +
	"\x0fGetGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"=\n" +
	"\x10GetGroupResponse\x12)\n" +
	"\x05group\x18\x01 \x01(\v2\x13.chat_service.GroupR\x05group\"f\n" +
	"\x15AddUserToGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\badded_by\x18\x03 \x01(\tR\aaddedBy\"2\n" +
	"\x16AddUserToGroupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"o\n" +
	"\x1aRemoveUserFromGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"removed_by\x18\x03 \x01(\tR\tremovedBy\"7\n" +
	"\x1bRemoveUserFromGroupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"0\n" +
	"\x15ListUserGroupsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"E\n" +
	"\x16ListUserGroupsResponse\x12+\n" +
	"\x06groups\x18\x01 \x03(\v2\x13.chat_service.GroupR\x06groups\"/\n" +
	"\x14StreamUpdatesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\xbf\x03\n" +
	"\fStreamUpdate\x129\n" +
	"\x04type\x18\x01 \x01(\x0e2%.chat_service.StreamUpdate.UpdateTypeR\x04type\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12/\n" +
	"\amessage\x18\x03 \x01(\v2\x15.chat_service.MessageR\amessage\x12&\n" +
	"\x04user\x18\x04 \x01(\v2\x12.chat_service.UserR\x04user\x12)\n" +
	"\x05group\x18\x05 \x01(\v2\x13.chat_service.GroupR\x05group\x12'\n" +
	"\x0fconversation_id\x18\x06 \x01(\tR\x0econversationId\"\xa8\x01\n" +
	"\n" +
	"UpdateType\x12\x0f\n" +
	"\vNEW_MESSAGE\x10\x00\x12\x10\n" +
	"\fMESSAGE_READ\x10\x01\x12\x12\n" +
	"\x0eMESSAGE_EDITED\x10\x02\x12\x13\n" +
	"\x0fMESSAGE_DELETED\x10\x03\x12\x17\n" +
	"\x13USER_STATUS_CHANGED\x10\x04\x12\x0f\n" +
	"\vUSER_TYPING\x10\x05\x12\x11\n" +
	"\rGROUP_CREATED\x10\x06\x12\x11\n" +
	"\rGROUP_UPDATED\x10\a\"d\n" +
	"\x17UpdateUserStatusRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.chat_service.UserStatusR\x06status\"4\n" +
	"\x18UpdateUserStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"R\n" +
	"\x18MarkMessageAsReadRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"5\n" +
	"\x19MarkMessageAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*8\n" +
	"\vMessageType\x12\b\n" +
	"\x04TEXT\x10\x00\x12\t\n" +
	"\x05IMAGE\x10\x01\x12\b\n" +
	"\x04FILE\x10\x02\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x03*9\n" +
	"\n" +
	"UserStatus\x12\n" +
	"\n" +
	"\x06ONLINE\x10\x00\x12\b\n" +
	"\x04AWAY\x10\x01\x12\b\n" +
	"\x04BUSY\x10\x02\x12\v\n" +
	"\aOFFLINE\x10\x032\xb2\x10\n" +
	"\vChatService\x12k\n" +
	"\vSendMessage\x12 .chat_service.SendMessageRequest\x1a!.chat_service.SendMessageResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/messages\x12r\n" +
	"\n" +
	"GetMessage\x12\x1f.chat_service.GetMessageRequest\x1a .chat_service.GetMessageResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/messages/{message_id}\x12{\n" +
	"\rDeleteMessage\x12\".chat_service.DeleteMessageRequest\x1a#.chat_service.DeleteMessageResponse\"!\x82\xd3\xe4\x93\x02\x1b*\x19/v1/messages/{message_id}\x12x\n" +
	"\vEditMessage\x12 .chat_service.EditMessageRequest\x1a!.chat_service.EditMessageResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\x1a\x19/v1/messages/{message_id}\x12\xac\x01\n" +
	"\x17GetConversationMessages\x12,.chat_service.GetConversationMessagesRequest\x1a-.chat_service.GetConversationMessagesResponse\"4\x82\xd3\xe4\x93\x02.\x12,/v1/conversations/{conversation_id}/messages\x12\x85\x01\n" +
	"\x12CreateConversation\x12'.chat_service.CreateConversationRequest\x1a(.chat_service.CreateConversationResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/conversations\x12\x8b\x01\n" +
	"\x0fGetConversation\x12$.chat_service.GetConversationRequest\x1a%.chat_service.GetConversationResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/conversations/{conversation_id}\x12\x9b\x01\n" +
	"\x15ListUserConversations\x12*.chat_service.ListUserConversationsRequest\x1a+.chat_service.ListUserConversationsResponse\")\x82\xd3\xe4\x93\x02#\x12!/v1/users/{user_id}/conversations\x12i\n" +
	"\vCreateGroup\x12 .chat_service.CreateGroupRequest\x1a!.chat_service.CreateGroupResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v1/groups\x12h\n" +
	"\bGetGroup\x12\x1d.chat_service.GetGroupRequest\x1a\x1e.chat_service.GetGroupResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/groups/{group_id}\x12\x83\x01\n" +
	"\x0eAddUserToGroup\x12#.chat_service.AddUserToGroupRequest\x1a$.chat_service.AddUserToGroupResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/groups/{group_id}/users\x12\x99\x01\n" +
	"\x13RemoveUserFromGroup\x12(.chat_service.RemoveUserFromGroupRequest\x1a).chat_service.RemoveUserFromGroupResponse\"-\x82\xd3\xe4\x93\x02'*%/v1/groups/{group_id}/users/{user_id}\x12\x7f\n" +
	"\x0eListUserGroups\x12#.chat_service.ListUserGroupsRequest\x1a$.chat_service.ListUserGroupsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v1/users/{user_id}/groups\x12S\n" +
	"\rStreamUpdates\x12\".chat_service.StreamUpdatesRequest\x1a\x1a.chat_service.StreamUpdate\"\x000\x01\x12\x88\x01\n" +
	"\x10UpdateUserStatus\x12%.chat_service.UpdateUserStatusRequest\x1a&.chat_service.UpdateUserStatusResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\x1a\x1a/v1/users/{user_id}/status\x12\x8f\x01\n" +
	"\x11MarkMessageAsRead\x12&.chat_service.MarkMessageAsReadRequest\x1a'.chat_service.MarkMessageAsReadResponse\")\x82\xd3\xe4\x93\x02#:\x01*\x1a\x1e/v1/messages/{message_id}/readB\x1fZ\x1d./services/chat-service/protob\x06proto3"

var (
	file_chat_service_proto_rawDescOnce sync.Once
	file_chat_service_proto_rawDescData []byte
)

func file_chat_service_proto_rawDescGZIP() []byte {
	file_chat_service_proto_rawDescOnce.Do(func() {
		file_chat_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_service_proto_rawDesc), len(file_chat_service_proto_rawDesc)))
	})
	return file_chat_service_proto_rawDescData
}

var file_chat_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_chat_service_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_chat_service_proto_goTypes = []any{
	(MessageType)(0),                        // 0: chat_service.MessageType
	(UserStatus)(0),                         // 1: chat_service.UserStatus
	(StreamUpdate_UpdateType)(0),            // 2: chat_service.StreamUpdate.UpdateType
	(*Message)(nil),                         // 3: chat_service.Message
	(*Conversation)(nil),                    // 4: chat_service.Conversation
	(*Group)(nil),                           // 5: chat_service.Group
	(*User)(nil),                            // 6: chat_service.User
	(*SendMessageRequest)(nil),              // 7: chat_service.SendMessageRequest
	(*SendMessageResponse)(nil),             // 8: chat_service.SendMessageResponse
	(*GetMessageRequest)(nil),               // 9: chat_service.GetMessageRequest
	(*GetMessageResponse)(nil),              // 10: chat_service.GetMessageResponse
	(*DeleteMessageRequest)(nil),            // 11: chat_service.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),           // 12: chat_service.DeleteMessageResponse
	(*EditMessageRequest)(nil),              // 13: chat_service.EditMessageRequest
	(*EditMessageResponse)(nil),             // 14: chat_service.EditMessageResponse
	(*GetConversationMessagesRequest)(nil),  // 15: chat_service.GetConversationMessagesRequest
	(*GetConversationMessagesResponse)(nil), // 16: chat_service.GetConversationMessagesResponse
	(*CreateConversationRequest)(nil),       // 17: chat_service.CreateConversationRequest
	(*CreateConversationResponse)(nil),      // 18: chat_service.CreateConversationResponse
	(*GetConversationRequest)(nil),          // 19: chat_service.GetConversationRequest
	(*GetConversationResponse)(nil),         // 20: chat_service.GetConversationResponse
	(*ListUserConversationsRequest)(nil),    // 21: chat_service.ListUserConversationsRequest
	(*ListUserConversationsResponse)(nil),   // 22: chat_service.ListUserConversationsResponse
	(*CreateGroupRequest)(nil),              // 23: chat_service.CreateGroupRequest
	(*CreateGroupResponse)(nil),             // 24: chat_service.CreateGroupResponse
	(*GetGroupRequest)(nil),                 // 25: chat_service.GetGroupRequest
	(*GetGroupResponse)(nil),                // 26: chat_service.GetGroupResponse
	(*AddUserToGroupRequest)(nil),           // 27: chat_service.AddUserToGroupRequest
	(*AddUserToGroupResponse)(nil),          // 28: chat_service.AddUserToGroupResponse
	(*RemoveUserFromGroupRequest)(nil),      // 29: chat_service.RemoveUserFromGroupRequest
	(*RemoveUserFromGroupResponse)(nil),     // 30: chat_service.RemoveUserFromGroupResponse
	(*ListUserGroupsRequest)(nil),           // 31: chat_service.ListUserGroupsRequest
	(*ListUserGroupsResponse)(nil),          // 32: chat_service.ListUserGroupsResponse
	(*StreamUpdatesRequest)(nil),            // 33: chat_service.StreamUpdatesRequest
	(*StreamUpdate)(nil),                    // 34: chat_service.StreamUpdate
	(*UpdateUserStatusRequest)(nil),         // 35: chat_service.UpdateUserStatusRequest
	(*UpdateUserStatusResponse)(nil),        // 36: chat_service.UpdateUserStatusResponse
	(*MarkMessageAsReadRequest)(nil),        // 37: chat_service.MarkMessageAsReadRequest
	(*MarkMessageAsReadResponse)(nil),       // 38: chat_service.MarkMessageAsReadResponse
}
var file_chat_service_proto_depIdxs = []int32{
	0,  // 0: chat_service.Message.type:type_name -> chat_service.MessageType
	1,  // 1: chat_service.User.status:type_name -> chat_service.UserStatus
	0,  // 2: chat_service.SendMessageRequest.type:type_name -> chat_service.MessageType
	3,  // 3: chat_service.SendMessageResponse.message:type_name -> chat_service.Message
	3,  // 4: chat_service.GetMessageResponse.message:type_name -> chat_service.Message
	3,  // 5: chat_service.EditMessageResponse.message:type_name -> chat_service.Message
	3,  // 6: chat_service.GetConversationMessagesResponse.messages:type_name -> chat_service.Message
	4,  // 7: chat_service.CreateConversationResponse.conversation:type_name -> chat_service.Conversation
	4,  // 8: chat_service.GetConversationResponse.conversation:type_name -> chat_service.Conversation
	4,  // 9: chat_service.ListUserConversationsResponse.conversations:type_name -> chat_service.Conversation
	5,  // 10: chat_service.CreateGroupResponse.group:type_name -> chat_service.Group
	5,  // 11: chat_service.GetGroupResponse.group:type_name -> chat_service.Group
	5,  // 12: chat_service.ListUserGroupsResponse.groups:type_name -> chat_service.Group
	2,  // 13: chat_service.StreamUpdate.type:type_name -> chat_service.StreamUpdate.UpdateType
	3,  // 14: chat_service.StreamUpdate.message:type_name -> chat_service.Message
	6,  // 15: chat_service.StreamUpdate.user:type_name -> chat_service.User
	5,  // 16: chat_service.StreamUpdate.group:type_name -> chat_service.Group
	1,  // 17: chat_service.UpdateUserStatusRequest.status:type_name -> chat_service.UserStatus
	7,  // 18: chat_service.ChatService.SendMessage:input_type -> chat_service.SendMessageRequest
	9,  // 19: chat_service.ChatService.GetMessage:input_type -> chat_service.GetMessageRequest
	11, // 20: chat_service.ChatService.DeleteMessage:input_type -> chat_service.DeleteMessageRequest
	13, // 21: chat_service.ChatService.EditMessage:input_type -> chat_service.EditMessageRequest
	15, // 22: chat_service.ChatService.GetConversationMessages:input_type -> chat_service.GetConversationMessagesRequest
	17, // 23: chat_service.ChatService.CreateConversation:input_type -> chat_service.CreateConversationRequest
	19, // 24: chat_service.ChatService.GetConversation:input_type -> chat_service.GetConversationRequest
	21, // 25: chat_service.ChatService.ListUserConversations:input_type -> chat_service.ListUserConversationsRequest
	23, // 26: chat_service.ChatService.CreateGroup:input_type -> chat_service.CreateGroupRequest
	25, // 27: chat_service.ChatService.GetGroup:input_type -> chat_service.GetGroupRequest
	27, // 28: chat_service.ChatService.AddUserToGroup:input_type -> chat_service.AddUserToGroupRequest
	29, // 29: chat_service.ChatService.RemoveUserFromGroup:input_type -> chat_service.RemoveUserFromGroupRequest
	31, // 30: chat_service.ChatService.ListUserGroups:input_type -> chat_service.ListUserGroupsRequest
	33, // 31: chat_service.ChatService.StreamUpdates:input_type -> chat_service.StreamUpdatesRequest
	35, // 32: chat_service.ChatService.UpdateUserStatus:input_type -> chat_service.UpdateUserStatusRequest
	37, // 33: chat_service.ChatService.MarkMessageAsRead:input_type -> chat_service.MarkMessageAsReadRequest
	8,  // 34: chat_service.ChatService.SendMessage:output_type -> chat_service.SendMessageResponse
	10, // 35: chat_service.ChatService.GetMessage:output_type -> chat_service.GetMessageResponse
	12, // 36: chat_service.ChatService.DeleteMessage:output_type -> chat_service.DeleteMessageResponse
	14, // 37: chat_service.ChatService.EditMessage:output_type -> chat_service.EditMessageResponse
	16, // 38: chat_service.ChatService.GetConversationMessages:output_type -> chat_service.GetConversationMessagesResponse
	18, // 39: chat_service.ChatService.CreateConversation:output_type -> chat_service.CreateConversationResponse
	20, // 40: chat_service.ChatService.GetConversation:output_type -> chat_service.GetConversationResponse
	22, // 41: chat_service.ChatService.ListUserConversations:output_type -> chat_service.ListUserConversationsResponse
	24, // 42: chat_service.ChatService.CreateGroup:output_type -> chat_service.CreateGroupResponse
	26, // 43: chat_service.ChatService.GetGroup:output_type -> chat_service.GetGroupResponse
	28, // 44: chat_service.ChatService.AddUserToGroup:output_type -> chat_service.AddUserToGroupResponse
	30, // 45: chat_service.ChatService.RemoveUserFromGroup:output_type -> chat_service.RemoveUserFromGroupResponse
	32, // 46: chat_service.ChatService.ListUserGroups:output_type -> chat_service.ListUserGroupsResponse
	34, // 47: chat_service.ChatService.StreamUpdates:output_type -> chat_service.StreamUpdate
	36, // 48: chat_service.ChatService.UpdateUserStatus:output_type -> chat_service.UpdateUserStatusResponse
	38, // 49: chat_service.ChatService.MarkMessageAsRead:output_type -> chat_service.MarkMessageAsReadResponse
	34, // [34:50] is the sub-list for method output_type
	18, // [18:34] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_chat_service_proto_init() }
func file_chat_service_proto_init() {
	if File_chat_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_service_proto_rawDesc), len(file_chat_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_service_proto_goTypes,
		DependencyIndexes: file_chat_service_proto_depIdxs,
		EnumInfos:         file_chat_service_proto_enumTypes,
		MessageInfos:      file_chat_service_proto_msgTypes,
	}.Build()
	File_chat_service_proto = out.File
	file_chat_service_proto_goTypes = nil
	file_chat_service_proto_depIdxs = nil
}
