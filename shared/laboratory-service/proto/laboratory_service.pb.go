// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0--rc1
// source: laboratory_service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestLabRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Status           string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	PatientInfo      *PatientInfo           `protobuf:"bytes,1,opt,name=patient_info,json=patientInfo,proto3" json:"patient_info,omitempty"`
	RequestDetails   *RequestDetails        `protobuf:"bytes,2,opt,name=request_details,json=requestDetails,proto3" json:"request_details,omitempty"`
	TestInfo         *TestInfo              `protobuf:"bytes,3,opt,name=test_info,json=testInfo,proto3" json:"test_info,omitempty"`
	SampleCollection *SampleCollection      `protobuf:"bytes,4,opt,name=sample_collection,json=sampleCollection,proto3" json:"sample_collection,omitempty"`
	Timestamps       *Timestamps            `protobuf:"bytes,5,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	FollowUpDate     string                 `protobuf:"bytes,6,opt,name=follow_up_date,json=followUpDate,proto3" json:"follow_up_date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestLabRequest) Reset() {
	*x = RequestLabRequest{}
	mi := &file_laboratory_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestLabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLabRequest) ProtoMessage() {}

func (x *RequestLabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLabRequest.ProtoReflect.Descriptor instead.
func (*RequestLabRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{0}
}

func (x *RequestLabRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestLabRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RequestLabRequest) GetPatientInfo() *PatientInfo {
	if x != nil {
		return x.PatientInfo
	}
	return nil
}

func (x *RequestLabRequest) GetRequestDetails() *RequestDetails {
	if x != nil {
		return x.RequestDetails
	}
	return nil
}

func (x *RequestLabRequest) GetTestInfo() *TestInfo {
	if x != nil {
		return x.TestInfo
	}
	return nil
}

func (x *RequestLabRequest) GetSampleCollection() *SampleCollection {
	if x != nil {
		return x.SampleCollection
	}
	return nil
}

func (x *RequestLabRequest) GetTimestamps() *Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *RequestLabRequest) GetFollowUpDate() string {
	if x != nil {
		return x.FollowUpDate
	}
	return ""
}

type AddTestResultRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PatientInfo       *PatientInfo           `protobuf:"bytes,1,opt,name=patient_info,json=patientInfo,proto3" json:"patient_info,omitempty"`
	RequestId         int64                  `protobuf:"varint,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	TestInfo          *TestInfo              `protobuf:"bytes,2,opt,name=test_info,json=testInfo,proto3" json:"test_info,omitempty"`
	ResultDetails     []*ResultDetails       `protobuf:"bytes,3,rep,name=result_details,json=resultDetails,proto3" json:"result_details,omitempty"`
	QualityIndicators *QualityIndicators     `protobuf:"bytes,4,opt,name=quality_indicators,json=qualityIndicators,proto3" json:"quality_indicators,omitempty"`
	Timestamps        *Timestamps            `protobuf:"bytes,5,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	AdditionalInfo    *AdditionalInfo        `protobuf:"bytes,6,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddTestResultRequest) Reset() {
	*x = AddTestResultRequest{}
	mi := &file_laboratory_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTestResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTestResultRequest) ProtoMessage() {}

func (x *AddTestResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTestResultRequest.ProtoReflect.Descriptor instead.
func (*AddTestResultRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddTestResultRequest) GetPatientInfo() *PatientInfo {
	if x != nil {
		return x.PatientInfo
	}
	return nil
}

func (x *AddTestResultRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *AddTestResultRequest) GetTestInfo() *TestInfo {
	if x != nil {
		return x.TestInfo
	}
	return nil
}

func (x *AddTestResultRequest) GetResultDetails() []*ResultDetails {
	if x != nil {
		return x.ResultDetails
	}
	return nil
}

func (x *AddTestResultRequest) GetQualityIndicators() *QualityIndicators {
	if x != nil {
		return x.QualityIndicators
	}
	return nil
}

func (x *AddTestResultRequest) GetTimestamps() *Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *AddTestResultRequest) GetAdditionalInfo() *AdditionalInfo {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

type ViewLabRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewLabRequestsRequest) Reset() {
	*x = ViewLabRequestsRequest{}
	mi := &file_laboratory_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewLabRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewLabRequestsRequest) ProtoMessage() {}

func (x *ViewLabRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewLabRequestsRequest.ProtoReflect.Descriptor instead.
func (*ViewLabRequestsRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{2}
}

type ViewLabRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*RequestLabRequest   `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewLabRequestsResponse) Reset() {
	*x = ViewLabRequestsResponse{}
	mi := &file_laboratory_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewLabRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewLabRequestsResponse) ProtoMessage() {}

func (x *ViewLabRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewLabRequestsResponse.ProtoReflect.Descriptor instead.
func (*ViewLabRequestsResponse) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{3}
}

func (x *ViewLabRequestsResponse) GetRequests() []*RequestLabRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type LabResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabResponse) Reset() {
	*x = LabResponse{}
	mi := &file_laboratory_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabResponse) ProtoMessage() {}

func (x *LabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabResponse.ProtoReflect.Descriptor instead.
func (*LabResponse) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{4}
}

func (x *LabResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PatientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatientInfo) Reset() {
	*x = PatientInfo{}
	mi := &file_laboratory_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientInfo) ProtoMessage() {}

func (x *PatientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientInfo.ProtoReflect.Descriptor instead.
func (*PatientInfo) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{5}
}

func (x *PatientInfo) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type RequestDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctor        string                 `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
	Department    string                 `protobuf:"bytes,2,opt,name=department,proto3" json:"department,omitempty"`
	Priority      string                 `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	ClinicalNotes string                 `protobuf:"bytes,4,opt,name=clinical_notes,json=clinicalNotes,proto3" json:"clinical_notes,omitempty"`
	Attachments   []*File                `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestDetails) Reset() {
	*x = RequestDetails{}
	mi := &file_laboratory_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDetails) ProtoMessage() {}

func (x *RequestDetails) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDetails.ProtoReflect.Descriptor instead.
func (*RequestDetails) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{6}
}

func (x *RequestDetails) GetDoctor() string {
	if x != nil {
		return x.Doctor
	}
	return ""
}

func (x *RequestDetails) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *RequestDetails) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *RequestDetails) GetClinicalNotes() string {
	if x != nil {
		return x.ClinicalNotes
	}
	return ""
}

func (x *RequestDetails) GetAttachments() []*File {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type TestInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestName      string                 `protobuf:"bytes,1,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	TestPanel     string                 `protobuf:"bytes,2,opt,name=test_panel,json=testPanel,proto3" json:"test_panel,omitempty"`
	Instructions  string                 `protobuf:"bytes,3,opt,name=instructions,proto3" json:"instructions,omitempty"`
	Analyzer      string                 `protobuf:"bytes,4,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestInfo) Reset() {
	*x = TestInfo{}
	mi := &file_laboratory_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestInfo) ProtoMessage() {}

func (x *TestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestInfo.ProtoReflect.Descriptor instead.
func (*TestInfo) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{7}
}

func (x *TestInfo) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *TestInfo) GetTestPanel() string {
	if x != nil {
		return x.TestPanel
	}
	return ""
}

func (x *TestInfo) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *TestInfo) GetAnalyzer() string {
	if x != nil {
		return x.Analyzer
	}
	return ""
}

type SampleCollection struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SampleId       string                 `protobuf:"bytes,1,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	Site           string                 `protobuf:"bytes,2,opt,name=site,proto3" json:"site,omitempty"`
	CollectorName  string                 `protobuf:"bytes,3,opt,name=collector_name,json=collectorName,proto3" json:"collector_name,omitempty"`
	CollectionTime string                 `protobuf:"bytes,4,opt,name=collection_time,json=collectionTime,proto3" json:"collection_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SampleCollection) Reset() {
	*x = SampleCollection{}
	mi := &file_laboratory_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleCollection) ProtoMessage() {}

func (x *SampleCollection) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleCollection.ProtoReflect.Descriptor instead.
func (*SampleCollection) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{8}
}

func (x *SampleCollection) GetSampleId() string {
	if x != nil {
		return x.SampleId
	}
	return ""
}

func (x *SampleCollection) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *SampleCollection) GetCollectorName() string {
	if x != nil {
		return x.CollectorName
	}
	return ""
}

func (x *SampleCollection) GetCollectionTime() string {
	if x != nil {
		return x.CollectionTime
	}
	return ""
}

type Timestamps struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	RequestInitiationTime string                 `protobuf:"bytes,1,opt,name=request_initiation_time,json=requestInitiationTime,proto3" json:"request_initiation_time,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Timestamps) Reset() {
	*x = Timestamps{}
	mi := &file_laboratory_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamps) ProtoMessage() {}

func (x *Timestamps) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamps.ProtoReflect.Descriptor instead.
func (*Timestamps) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{9}
}

func (x *Timestamps) GetRequestInitiationTime() string {
	if x != nil {
		return x.RequestInitiationTime
	}
	return ""
}

type ResultDetails struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Parameter      string                 `protobuf:"bytes,1,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Value          string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Unit           string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	ReferenceRange string                 `protobuf:"bytes,4,opt,name=reference_range,json=referenceRange,proto3" json:"reference_range,omitempty"`
	Flag           string                 `protobuf:"bytes,5,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResultDetails) Reset() {
	*x = ResultDetails{}
	mi := &file_laboratory_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDetails) ProtoMessage() {}

func (x *ResultDetails) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDetails.ProtoReflect.Descriptor instead.
func (*ResultDetails) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{10}
}

func (x *ResultDetails) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *ResultDetails) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResultDetails) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ResultDetails) GetReferenceRange() string {
	if x != nil {
		return x.ReferenceRange
	}
	return ""
}

func (x *ResultDetails) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type QualityIndicators struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Methodology     string                 `protobuf:"bytes,1,opt,name=methodology,proto3" json:"methodology,omitempty"`
	ReagentsUsed    string                 `protobuf:"bytes,2,opt,name=reagents_used,json=reagentsUsed,proto3" json:"reagents_used,omitempty"`
	EquipmentUsed   string                 `protobuf:"bytes,3,opt,name=equipment_used,json=equipmentUsed,proto3" json:"equipment_used,omitempty"`
	ResultEntryTime string                 `protobuf:"bytes,4,opt,name=result_entry_time,json=resultEntryTime,proto3" json:"result_entry_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QualityIndicators) Reset() {
	*x = QualityIndicators{}
	mi := &file_laboratory_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityIndicators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityIndicators) ProtoMessage() {}

func (x *QualityIndicators) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityIndicators.ProtoReflect.Descriptor instead.
func (*QualityIndicators) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{11}
}

func (x *QualityIndicators) GetMethodology() string {
	if x != nil {
		return x.Methodology
	}
	return ""
}

func (x *QualityIndicators) GetReagentsUsed() string {
	if x != nil {
		return x.ReagentsUsed
	}
	return ""
}

func (x *QualityIndicators) GetEquipmentUsed() string {
	if x != nil {
		return x.EquipmentUsed
	}
	return ""
}

func (x *QualityIndicators) GetResultEntryTime() string {
	if x != nil {
		return x.ResultEntryTime
	}
	return ""
}

type AdditionalInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Remarks       string                 `protobuf:"bytes,1,opt,name=remarks,proto3" json:"remarks,omitempty"`
	Attachments   *File                  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdditionalInfo) Reset() {
	*x = AdditionalInfo{}
	mi := &file_laboratory_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdditionalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalInfo) ProtoMessage() {}

func (x *AdditionalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalInfo.ProtoReflect.Descriptor instead.
func (*AdditionalInfo) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{12}
}

func (x *AdditionalInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AdditionalInfo) GetAttachments() *File {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_laboratory_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{13}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ViewTestResultsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"` // Optional filter
	TestName      string                 `protobuf:"bytes,2,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`    // Optional filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewTestResultsRequest) Reset() {
	*x = ViewTestResultsRequest{}
	mi := &file_laboratory_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewTestResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTestResultsRequest) ProtoMessage() {}

func (x *ViewTestResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTestResultsRequest.ProtoReflect.Descriptor instead.
func (*ViewTestResultsRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{14}
}

func (x *ViewTestResultsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ViewTestResultsRequest) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

type ViewTestResultsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*TestResult          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewTestResultsResponse) Reset() {
	*x = ViewTestResultsResponse{}
	mi := &file_laboratory_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewTestResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTestResultsResponse) ProtoMessage() {}

func (x *ViewTestResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTestResultsResponse.ProtoReflect.Descriptor instead.
func (*ViewTestResultsResponse) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{15}
}

func (x *ViewTestResultsResponse) GetResults() []*TestResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type TestResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	RequestId       int64                  `protobuf:"varint,11,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	PatientId       string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	TestName        string                 `protobuf:"bytes,2,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	TestPanel       string                 `protobuf:"bytes,3,opt,name=test_panel,json=testPanel,proto3" json:"test_panel,omitempty"`
	Methodology     string                 `protobuf:"bytes,4,opt,name=methodology,proto3" json:"methodology,omitempty"`
	ReagentsUsed    string                 `protobuf:"bytes,5,opt,name=reagents_used,json=reagentsUsed,proto3" json:"reagents_used,omitempty"`
	EquipmentUsed   string                 `protobuf:"bytes,6,opt,name=equipment_used,json=equipmentUsed,proto3" json:"equipment_used,omitempty"`
	Remarks         string                 `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
	ResultEntryTime string                 `protobuf:"bytes,8,opt,name=result_entry_time,json=resultEntryTime,proto3" json:"result_entry_time,omitempty"`
	ResultDetails   []*ResultDetails       `protobuf:"bytes,9,rep,name=result_details,json=resultDetails,proto3" json:"result_details,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	mi := &file_laboratory_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{16}
}

func (x *TestResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestResult) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *TestResult) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *TestResult) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *TestResult) GetTestPanel() string {
	if x != nil {
		return x.TestPanel
	}
	return ""
}

func (x *TestResult) GetMethodology() string {
	if x != nil {
		return x.Methodology
	}
	return ""
}

func (x *TestResult) GetReagentsUsed() string {
	if x != nil {
		return x.ReagentsUsed
	}
	return ""
}

func (x *TestResult) GetEquipmentUsed() string {
	if x != nil {
		return x.EquipmentUsed
	}
	return ""
}

func (x *TestResult) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *TestResult) GetResultEntryTime() string {
	if x != nil {
		return x.ResultEntryTime
	}
	return ""
}

func (x *TestResult) GetResultDetails() []*ResultDetails {
	if x != nil {
		return x.ResultDetails
	}
	return nil
}

type ViewLabRequestsByPatientIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewLabRequestsByPatientIDRequest) Reset() {
	*x = ViewLabRequestsByPatientIDRequest{}
	mi := &file_laboratory_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewLabRequestsByPatientIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewLabRequestsByPatientIDRequest) ProtoMessage() {}

func (x *ViewLabRequestsByPatientIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewLabRequestsByPatientIDRequest.ProtoReflect.Descriptor instead.
func (*ViewLabRequestsByPatientIDRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{17}
}

func (x *ViewLabRequestsByPatientIDRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type UpdateLabRequestRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status           string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	RequestDetails   *RequestDetails        `protobuf:"bytes,2,opt,name=request_details,json=requestDetails,proto3" json:"request_details,omitempty"`
	TestInfo         *TestInfo              `protobuf:"bytes,3,opt,name=test_info,json=testInfo,proto3" json:"test_info,omitempty"`
	SampleCollection *SampleCollection      `protobuf:"bytes,4,opt,name=sample_collection,json=sampleCollection,proto3" json:"sample_collection,omitempty"`
	FollowUpDate     string                 `protobuf:"bytes,5,opt,name=follow_up_date,json=followUpDate,proto3" json:"follow_up_date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateLabRequestRequest) Reset() {
	*x = UpdateLabRequestRequest{}
	mi := &file_laboratory_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLabRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabRequestRequest) ProtoMessage() {}

func (x *UpdateLabRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabRequestRequest.ProtoReflect.Descriptor instead.
func (*UpdateLabRequestRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateLabRequestRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLabRequestRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateLabRequestRequest) GetRequestDetails() *RequestDetails {
	if x != nil {
		return x.RequestDetails
	}
	return nil
}

func (x *UpdateLabRequestRequest) GetTestInfo() *TestInfo {
	if x != nil {
		return x.TestInfo
	}
	return nil
}

func (x *UpdateLabRequestRequest) GetSampleCollection() *SampleCollection {
	if x != nil {
		return x.SampleCollection
	}
	return nil
}

func (x *UpdateLabRequestRequest) GetFollowUpDate() string {
	if x != nil {
		return x.FollowUpDate
	}
	return ""
}

type UpdateTestResultRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TestInfo          *TestInfo              `protobuf:"bytes,2,opt,name=test_info,json=testInfo,proto3" json:"test_info,omitempty"`
	ResultDetails     []*ResultDetails       `protobuf:"bytes,3,rep,name=result_details,json=resultDetails,proto3" json:"result_details,omitempty"`
	QualityIndicators *QualityIndicators     `protobuf:"bytes,4,opt,name=quality_indicators,json=qualityIndicators,proto3" json:"quality_indicators,omitempty"`
	AdditionalInfo    *AdditionalInfo        `protobuf:"bytes,5,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateTestResultRequest) Reset() {
	*x = UpdateTestResultRequest{}
	mi := &file_laboratory_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestResultRequest) ProtoMessage() {}

func (x *UpdateTestResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laboratory_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestResultRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestResultRequest) Descriptor() ([]byte, []int) {
	return file_laboratory_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTestResultRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTestResultRequest) GetTestInfo() *TestInfo {
	if x != nil {
		return x.TestInfo
	}
	return nil
}

func (x *UpdateTestResultRequest) GetResultDetails() []*ResultDetails {
	if x != nil {
		return x.ResultDetails
	}
	return nil
}

func (x *UpdateTestResultRequest) GetQualityIndicators() *QualityIndicators {
	if x != nil {
		return x.QualityIndicators
	}
	return nil
}

func (x *UpdateTestResultRequest) GetAdditionalInfo() *AdditionalInfo {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

var File_laboratory_service_proto protoreflect.FileDescriptor

const file_laboratory_service_proto_rawDesc = "" +
	"\n" +
	"\x18laboratory_service.proto\x12\x12laboratory_service\x1a\x1cgoogle/api/annotations.proto\"\xc0\x03\n" +
	"\x11RequestLabRequest\x12\x0e\n" +
	"\x02id\x18\a \x01(\x03R\x02id\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12B\n" +
	"\fpatient_info\x18\x01 \x01(\v2\x1f.laboratory_service.PatientInfoR\vpatientInfo\x12K\n" +
	"\x0frequest_details\x18\x02 \x01(\v2\".laboratory_service.RequestDetailsR\x0erequestDetails\x129\n" +
	"\ttest_info\x18\x03 \x01(\v2\x1c.laboratory_service.TestInfoR\btestInfo\x12Q\n" +
	"\x11sample_collection\x18\x04 \x01(\v2$.laboratory_service.SampleCollectionR\x10sampleCollection\x12>\n" +
	"\n" +
	"timestamps\x18\x05 \x01(\v2\x1e.laboratory_service.TimestampsR\n" +
	"timestamps\x12$\n" +
	"\x0efollow_up_date\x18\x06 \x01(\tR\ffollowUpDate\"\xe1\x03\n" +
	"\x14AddTestResultRequest\x12B\n" +
	"\fpatient_info\x18\x01 \x01(\v2\x1f.laboratory_service.PatientInfoR\vpatientInfo\x12\x1d\n" +
	"\n" +
	"request_id\x18\a \x01(\x03R\trequestId\x129\n" +
	"\ttest_info\x18\x02 \x01(\v2\x1c.laboratory_service.TestInfoR\btestInfo\x12H\n" +
	"\x0eresult_details\x18\x03 \x03(\v2!.laboratory_service.ResultDetailsR\rresultDetails\x12T\n" +
	"\x12quality_indicators\x18\x04 \x01(\v2%.laboratory_service.QualityIndicatorsR\x11qualityIndicators\x12>\n" +
	"\n" +
	"timestamps\x18\x05 \x01(\v2\x1e.laboratory_service.TimestampsR\n" +
	"timestamps\x12K\n" +
	"\x0fadditional_info\x18\x06 \x01(\v2\".laboratory_service.AdditionalInfoR\x0eadditionalInfo\"\x18\n" +
	"\x16ViewLabRequestsRequest\"\\\n" +
	"\x17ViewLabRequestsResponse\x12A\n" +
	"\brequests\x18\x01 \x03(\v2%.laboratory_service.RequestLabRequestR\brequests\"'\n" +
	"\vLabResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\",\n" +
	"\vPatientInfo\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\"\xc7\x01\n" +
	"\x0eRequestDetails\x12\x16\n" +
	"\x06doctor\x18\x01 \x01(\tR\x06doctor\x12\x1e\n" +
	"\n" +
	"department\x18\x02 \x01(\tR\n" +
	"department\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\tR\bpriority\x12%\n" +
	"\x0eclinical_notes\x18\x04 \x01(\tR\rclinicalNotes\x12:\n" +
	"\vattachments\x18\x05 \x03(\v2\x18.laboratory_service.FileR\vattachments\"\x86\x01\n" +
	"\bTestInfo\x12\x1b\n" +
	"\ttest_name\x18\x01 \x01(\tR\btestName\x12\x1d\n" +
	"\n" +
	"test_panel\x18\x02 \x01(\tR\ttestPanel\x12\"\n" +
	"\finstructions\x18\x03 \x01(\tR\finstructions\x12\x1a\n" +
	"\banalyzer\x18\x04 \x01(\tR\banalyzer\"\x93\x01\n" +
	"\x10SampleCollection\x12\x1b\n" +
	"\tsample_id\x18\x01 \x01(\tR\bsampleId\x12\x12\n" +
	"\x04site\x18\x02 \x01(\tR\x04site\x12%\n" +
	"\x0ecollector_name\x18\x03 \x01(\tR\rcollectorName\x12'\n" +
	"\x0fcollection_time\x18\x04 \x01(\tR\x0ecollectionTime\"D\n" +
	"\n" +
	"Timestamps\x126\n" +
	"\x17request_initiation_time\x18\x01 \x01(\tR\x15requestInitiationTime\"\x94\x01\n" +
	"\rResultDetails\x12\x1c\n" +
	"\tparameter\x18\x01 \x01(\tR\tparameter\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\x12'\n" +
	"\x0freference_range\x18\x04 \x01(\tR\x0ereferenceRange\x12\x12\n" +
	"\x04flag\x18\x05 \x01(\tR\x04flag\"\xad\x01\n" +
	"\x11QualityIndicators\x12 \n" +
	"\vmethodology\x18\x01 \x01(\tR\vmethodology\x12#\n" +
	"\rreagents_used\x18\x02 \x01(\tR\freagentsUsed\x12%\n" +
	"\x0eequipment_used\x18\x03 \x01(\tR\requipmentUsed\x12*\n" +
	"\x11result_entry_time\x18\x04 \x01(\tR\x0fresultEntryTime\"f\n" +
	"\x0eAdditionalInfo\x12\x18\n" +
	"\aremarks\x18\x01 \x01(\tR\aremarks\x12:\n" +
	"\vattachments\x18\x02 \x01(\v2\x18.laboratory_service.FileR\vattachments\".\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"T\n" +
	"\x16ViewTestResultsRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x1b\n" +
	"\ttest_name\x18\x02 \x01(\tR\btestName\"S\n" +
	"\x17ViewTestResultsResponse\x128\n" +
	"\aresults\x18\x01 \x03(\v2\x1e.laboratory_service.TestResultR\aresults\"\x94\x03\n" +
	"\n" +
	"TestResult\x12\x0e\n" +
	"\x02id\x18\n" +
	" \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"request_id\x18\v \x01(\x03R\trequestId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x1b\n" +
	"\ttest_name\x18\x02 \x01(\tR\btestName\x12\x1d\n" +
	"\n" +
	"test_panel\x18\x03 \x01(\tR\ttestPanel\x12 \n" +
	"\vmethodology\x18\x04 \x01(\tR\vmethodology\x12#\n" +
	"\rreagents_used\x18\x05 \x01(\tR\freagentsUsed\x12%\n" +
	"\x0eequipment_used\x18\x06 \x01(\tR\requipmentUsed\x12\x18\n" +
	"\aremarks\x18\a \x01(\tR\aremarks\x12*\n" +
	"\x11result_entry_time\x18\b \x01(\tR\x0fresultEntryTime\x12H\n" +
	"\x0eresult_details\x18\t \x03(\v2!.laboratory_service.ResultDetailsR\rresultDetails\"B\n" +
	"!ViewLabRequestsByPatientIDRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\"\xc2\x02\n" +
	"\x17UpdateLabRequestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12K\n" +
	"\x0frequest_details\x18\x02 \x01(\v2\".laboratory_service.RequestDetailsR\x0erequestDetails\x129\n" +
	"\ttest_info\x18\x03 \x01(\v2\x1c.laboratory_service.TestInfoR\btestInfo\x12Q\n" +
	"\x11sample_collection\x18\x04 \x01(\v2$.laboratory_service.SampleCollectionR\x10sampleCollection\x12$\n" +
	"\x0efollow_up_date\x18\x05 \x01(\tR\ffollowUpDate\"\xd1\x02\n" +
	"\x17UpdateTestResultRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x129\n" +
	"\ttest_info\x18\x02 \x01(\v2\x1c.laboratory_service.TestInfoR\btestInfo\x12H\n" +
	"\x0eresult_details\x18\x03 \x03(\v2!.laboratory_service.ResultDetailsR\rresultDetails\x12T\n" +
	"\x12quality_indicators\x18\x04 \x01(\v2%.laboratory_service.QualityIndicatorsR\x11qualityIndicators\x12K\n" +
	"\x0fadditional_info\x18\x05 \x01(\v2\".laboratory_service.AdditionalInfoR\x0eadditionalInfo2\xa7\a\n" +
	"\x11LaboratoryService\x12i\n" +
	"\n" +
	"RequestLab\x12%.laboratory_service.RequestLabRequest\x1a\x1f.laboratory_service.LabResponse\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/v1/labs\x12w\n" +
	"\rAddTestResult\x12(.laboratory_service.AddTestResultRequest\x1a\x1f.laboratory_service.LabResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/labs/results\x12|\n" +
	"\x0fViewLabRequests\x12*.laboratory_service.ViewLabRequestsRequest\x1a+.laboratory_service.ViewLabRequestsResponse\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/v1/labs\x12\x84\x01\n" +
	"\x0fViewTestResults\x12*.laboratory_service.ViewTestResultsRequest\x1a+.laboratory_service.ViewTestResultsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/labs/results\x12\xa7\x01\n" +
	"\x1aViewLabRequestsByPatientID\x125.laboratory_service.ViewLabRequestsByPatientIDRequest\x1a+.laboratory_service.ViewLabRequestsResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v1/labs/patient/{patient_id}\x12z\n" +
	"\x10UpdateLabRequest\x12+.laboratory_service.UpdateLabRequestRequest\x1a\x1f.laboratory_service.LabResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\x1a\r/v1/labs/{id}\x12\x82\x01\n" +
	"\x10UpdateTestResult\x12+.laboratory_service.UpdateTestResultRequest\x1a\x1f.laboratory_service.LabResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\x1a\x15/v1/labs/results/{id}B%Z#./services/laboratory-service/protob\x06proto3"

var (
	file_laboratory_service_proto_rawDescOnce sync.Once
	file_laboratory_service_proto_rawDescData []byte
)

func file_laboratory_service_proto_rawDescGZIP() []byte {
	file_laboratory_service_proto_rawDescOnce.Do(func() {
		file_laboratory_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_laboratory_service_proto_rawDesc), len(file_laboratory_service_proto_rawDesc)))
	})
	return file_laboratory_service_proto_rawDescData
}

var file_laboratory_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_laboratory_service_proto_goTypes = []any{
	(*RequestLabRequest)(nil),                 // 0: laboratory_service.RequestLabRequest
	(*AddTestResultRequest)(nil),              // 1: laboratory_service.AddTestResultRequest
	(*ViewLabRequestsRequest)(nil),            // 2: laboratory_service.ViewLabRequestsRequest
	(*ViewLabRequestsResponse)(nil),           // 3: laboratory_service.ViewLabRequestsResponse
	(*LabResponse)(nil),                       // 4: laboratory_service.LabResponse
	(*PatientInfo)(nil),                       // 5: laboratory_service.PatientInfo
	(*RequestDetails)(nil),                    // 6: laboratory_service.RequestDetails
	(*TestInfo)(nil),                          // 7: laboratory_service.TestInfo
	(*SampleCollection)(nil),                  // 8: laboratory_service.SampleCollection
	(*Timestamps)(nil),                        // 9: laboratory_service.Timestamps
	(*ResultDetails)(nil),                     // 10: laboratory_service.ResultDetails
	(*QualityIndicators)(nil),                 // 11: laboratory_service.QualityIndicators
	(*AdditionalInfo)(nil),                    // 12: laboratory_service.AdditionalInfo
	(*File)(nil),                              // 13: laboratory_service.File
	(*ViewTestResultsRequest)(nil),            // 14: laboratory_service.ViewTestResultsRequest
	(*ViewTestResultsResponse)(nil),           // 15: laboratory_service.ViewTestResultsResponse
	(*TestResult)(nil),                        // 16: laboratory_service.TestResult
	(*ViewLabRequestsByPatientIDRequest)(nil), // 17: laboratory_service.ViewLabRequestsByPatientIDRequest
	(*UpdateLabRequestRequest)(nil),           // 18: laboratory_service.UpdateLabRequestRequest
	(*UpdateTestResultRequest)(nil),           // 19: laboratory_service.UpdateTestResultRequest
}
var file_laboratory_service_proto_depIdxs = []int32{
	5,  // 0: laboratory_service.RequestLabRequest.patient_info:type_name -> laboratory_service.PatientInfo
	6,  // 1: laboratory_service.RequestLabRequest.request_details:type_name -> laboratory_service.RequestDetails
	7,  // 2: laboratory_service.RequestLabRequest.test_info:type_name -> laboratory_service.TestInfo
	8,  // 3: laboratory_service.RequestLabRequest.sample_collection:type_name -> laboratory_service.SampleCollection
	9,  // 4: laboratory_service.RequestLabRequest.timestamps:type_name -> laboratory_service.Timestamps
	5,  // 5: laboratory_service.AddTestResultRequest.patient_info:type_name -> laboratory_service.PatientInfo
	7,  // 6: laboratory_service.AddTestResultRequest.test_info:type_name -> laboratory_service.TestInfo
	10, // 7: laboratory_service.AddTestResultRequest.result_details:type_name -> laboratory_service.ResultDetails
	11, // 8: laboratory_service.AddTestResultRequest.quality_indicators:type_name -> laboratory_service.QualityIndicators
	9,  // 9: laboratory_service.AddTestResultRequest.timestamps:type_name -> laboratory_service.Timestamps
	12, // 10: laboratory_service.AddTestResultRequest.additional_info:type_name -> laboratory_service.AdditionalInfo
	0,  // 11: laboratory_service.ViewLabRequestsResponse.requests:type_name -> laboratory_service.RequestLabRequest
	13, // 12: laboratory_service.RequestDetails.attachments:type_name -> laboratory_service.File
	13, // 13: laboratory_service.AdditionalInfo.attachments:type_name -> laboratory_service.File
	16, // 14: laboratory_service.ViewTestResultsResponse.results:type_name -> laboratory_service.TestResult
	10, // 15: laboratory_service.TestResult.result_details:type_name -> laboratory_service.ResultDetails
	6,  // 16: laboratory_service.UpdateLabRequestRequest.request_details:type_name -> laboratory_service.RequestDetails
	7,  // 17: laboratory_service.UpdateLabRequestRequest.test_info:type_name -> laboratory_service.TestInfo
	8,  // 18: laboratory_service.UpdateLabRequestRequest.sample_collection:type_name -> laboratory_service.SampleCollection
	7,  // 19: laboratory_service.UpdateTestResultRequest.test_info:type_name -> laboratory_service.TestInfo
	10, // 20: laboratory_service.UpdateTestResultRequest.result_details:type_name -> laboratory_service.ResultDetails
	11, // 21: laboratory_service.UpdateTestResultRequest.quality_indicators:type_name -> laboratory_service.QualityIndicators
	12, // 22: laboratory_service.UpdateTestResultRequest.additional_info:type_name -> laboratory_service.AdditionalInfo
	0,  // 23: laboratory_service.LaboratoryService.RequestLab:input_type -> laboratory_service.RequestLabRequest
	1,  // 24: laboratory_service.LaboratoryService.AddTestResult:input_type -> laboratory_service.AddTestResultRequest
	2,  // 25: laboratory_service.LaboratoryService.ViewLabRequests:input_type -> laboratory_service.ViewLabRequestsRequest
	14, // 26: laboratory_service.LaboratoryService.ViewTestResults:input_type -> laboratory_service.ViewTestResultsRequest
	17, // 27: laboratory_service.LaboratoryService.ViewLabRequestsByPatientID:input_type -> laboratory_service.ViewLabRequestsByPatientIDRequest
	18, // 28: laboratory_service.LaboratoryService.UpdateLabRequest:input_type -> laboratory_service.UpdateLabRequestRequest
	19, // 29: laboratory_service.LaboratoryService.UpdateTestResult:input_type -> laboratory_service.UpdateTestResultRequest
	4,  // 30: laboratory_service.LaboratoryService.RequestLab:output_type -> laboratory_service.LabResponse
	4,  // 31: laboratory_service.LaboratoryService.AddTestResult:output_type -> laboratory_service.LabResponse
	3,  // 32: laboratory_service.LaboratoryService.ViewLabRequests:output_type -> laboratory_service.ViewLabRequestsResponse
	15, // 33: laboratory_service.LaboratoryService.ViewTestResults:output_type -> laboratory_service.ViewTestResultsResponse
	3,  // 34: laboratory_service.LaboratoryService.ViewLabRequestsByPatientID:output_type -> laboratory_service.ViewLabRequestsResponse
	4,  // 35: laboratory_service.LaboratoryService.UpdateLabRequest:output_type -> laboratory_service.LabResponse
	4,  // 36: laboratory_service.LaboratoryService.UpdateTestResult:output_type -> laboratory_service.LabResponse
	30, // [30:37] is the sub-list for method output_type
	23, // [23:30] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_laboratory_service_proto_init() }
func file_laboratory_service_proto_init() {
	if File_laboratory_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_laboratory_service_proto_rawDesc), len(file_laboratory_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_laboratory_service_proto_goTypes,
		DependencyIndexes: file_laboratory_service_proto_depIdxs,
		MessageInfos:      file_laboratory_service_proto_msgTypes,
	}.Build()
	File_laboratory_service_proto = out.File
	file_laboratory_service_proto_goTypes = nil
	file_laboratory_service_proto_depIdxs = nil
}
