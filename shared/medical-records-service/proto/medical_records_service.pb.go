// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0--rc1
// source: medical_records_service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Diagnosis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId     string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Severity      string                 `protobuf:"bytes,6,opt,name=severity,proto3" json:"severity,omitempty"` // mild, moderate, severe
	Date          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"` // active, resolved
	Doctor        string                 `protobuf:"bytes,9,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Diagnosis) Reset() {
	*x = Diagnosis{}
	mi := &file_medical_records_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Diagnosis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnosis) ProtoMessage() {}

func (x *Diagnosis) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnosis.ProtoReflect.Descriptor instead.
func (*Diagnosis) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{0}
}

func (x *Diagnosis) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Diagnosis) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Diagnosis) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Diagnosis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Diagnosis) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Diagnosis) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Diagnosis) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Diagnosis) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Diagnosis) GetDoctor() string {
	if x != nil {
		return x.Doctor
	}
	return ""
}

type AddDiagnosisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Severity      string                 `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Doctor        string                 `protobuf:"bytes,8,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDiagnosisRequest) Reset() {
	*x = AddDiagnosisRequest{}
	mi := &file_medical_records_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDiagnosisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiagnosisRequest) ProtoMessage() {}

func (x *AddDiagnosisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiagnosisRequest.ProtoReflect.Descriptor instead.
func (*AddDiagnosisRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddDiagnosisRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddDiagnosisRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddDiagnosisRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDiagnosisRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddDiagnosisRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *AddDiagnosisRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddDiagnosisRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddDiagnosisRequest) GetDoctor() string {
	if x != nil {
		return x.Doctor
	}
	return ""
}

type GetDiagnosisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiagnosisRequest) Reset() {
	*x = GetDiagnosisRequest{}
	mi := &file_medical_records_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiagnosisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiagnosisRequest) ProtoMessage() {}

func (x *GetDiagnosisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiagnosisRequest.ProtoReflect.Descriptor instead.
func (*GetDiagnosisRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetDiagnosisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDiagnosisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDiagnosisRequest) Reset() {
	*x = DeleteDiagnosisRequest{}
	mi := &file_medical_records_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiagnosisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiagnosisRequest) ProtoMessage() {}

func (x *DeleteDiagnosisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiagnosisRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiagnosisRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDiagnosisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListDiagnosesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                           // Optional filter: all, active, resolved
	SearchTerm    string                 `protobuf:"bytes,3,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"` // Optional search term
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiagnosesRequest) Reset() {
	*x = ListDiagnosesRequest{}
	mi := &file_medical_records_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiagnosesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiagnosesRequest) ProtoMessage() {}

func (x *ListDiagnosesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiagnosesRequest.ProtoReflect.Descriptor instead.
func (*ListDiagnosesRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListDiagnosesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ListDiagnosesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListDiagnosesRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type ListDiagnosesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diagnoses     []*Diagnosis           `protobuf:"bytes,1,rep,name=diagnoses,proto3" json:"diagnoses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiagnosesResponse) Reset() {
	*x = ListDiagnosesResponse{}
	mi := &file_medical_records_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiagnosesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiagnosesResponse) ProtoMessage() {}

func (x *ListDiagnosesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiagnosesResponse.ProtoReflect.Descriptor instead.
func (*ListDiagnosesResponse) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListDiagnosesResponse) GetDiagnoses() []*Diagnosis {
	if x != nil {
		return x.Diagnoses
	}
	return nil
}

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId     string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedBy      []*NoteEdit            `protobuf:"bytes,6,rep,name=edited_by,json=editedBy,proto3" json:"edited_by,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_medical_records_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{6}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Note) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Note) GetEditedBy() []*NoteEdit {
	if x != nil {
		return x.EditedBy
	}
	return nil
}

func (x *Note) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type NoteEdit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteEdit) Reset() {
	*x = NoteEdit{}
	mi := &file_medical_records_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteEdit) ProtoMessage() {}

func (x *NoteEdit) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteEdit.ProtoReflect.Descriptor instead.
func (*NoteEdit) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{7}
}

func (x *NoteEdit) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *NoteEdit) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AddNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNoteRequest) Reset() {
	*x = AddNoteRequest{}
	mi := &file_medical_records_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoteRequest) ProtoMessage() {}

func (x *AddNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoteRequest.ProtoReflect.Descriptor instead.
func (*AddNoteRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{8}
}

func (x *AddNoteRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddNoteRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_medical_records_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_medical_records_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	SearchTerm    string                 `protobuf:"bytes,2,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"` // Optional search term
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_medical_records_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListNotesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ListNotesRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type ListNotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesResponse) Reset() {
	*x = ListNotesResponse{}
	mi := &file_medical_records_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesResponse) ProtoMessage() {}

func (x *ListNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesResponse.ProtoReflect.Descriptor instead.
func (*ListNotesResponse) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type VitalSign struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId        string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	AdmissionId      string                 `protobuf:"bytes,11,opt,name=admission_id,json=admissionId,proto3" json:"admission_id,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Temperature      float32                `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	HeartRate        int32                  `protobuf:"varint,5,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	BloodPressure    string                 `protobuf:"bytes,6,opt,name=blood_pressure,json=bloodPressure,proto3" json:"blood_pressure,omitempty"`
	RespiratoryRate  int32                  `protobuf:"varint,7,opt,name=respiratory_rate,json=respiratoryRate,proto3" json:"respiratory_rate,omitempty"`
	OxygenSaturation int32                  `protobuf:"varint,8,opt,name=oxygen_saturation,json=oxygenSaturation,proto3" json:"oxygen_saturation,omitempty"`
	Pain             int32                  `protobuf:"varint,9,opt,name=pain,proto3" json:"pain,omitempty"`
	RecordedBy       string                 `protobuf:"bytes,10,opt,name=recorded_by,json=recordedBy,proto3" json:"recorded_by,omitempty"`
	Notes            string                 `protobuf:"bytes,12,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VitalSign) Reset() {
	*x = VitalSign{}
	mi := &file_medical_records_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VitalSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VitalSign) ProtoMessage() {}

func (x *VitalSign) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VitalSign.ProtoReflect.Descriptor instead.
func (*VitalSign) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{13}
}

func (x *VitalSign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VitalSign) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *VitalSign) GetAdmissionId() string {
	if x != nil {
		return x.AdmissionId
	}
	return ""
}

func (x *VitalSign) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *VitalSign) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VitalSign) GetHeartRate() int32 {
	if x != nil {
		return x.HeartRate
	}
	return 0
}

func (x *VitalSign) GetBloodPressure() string {
	if x != nil {
		return x.BloodPressure
	}
	return ""
}

func (x *VitalSign) GetRespiratoryRate() int32 {
	if x != nil {
		return x.RespiratoryRate
	}
	return 0
}

func (x *VitalSign) GetOxygenSaturation() int32 {
	if x != nil {
		return x.OxygenSaturation
	}
	return 0
}

func (x *VitalSign) GetPain() int32 {
	if x != nil {
		return x.Pain
	}
	return 0
}

func (x *VitalSign) GetRecordedBy() string {
	if x != nil {
		return x.RecordedBy
	}
	return ""
}

func (x *VitalSign) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type AddVitalSignRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PatientId        string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	AdmissionId      string                 `protobuf:"bytes,9,opt,name=admission_id,json=admissionId,proto3" json:"admission_id,omitempty"`
	Temperature      float32                `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	HeartRate        int32                  `protobuf:"varint,3,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	BloodPressure    string                 `protobuf:"bytes,4,opt,name=blood_pressure,json=bloodPressure,proto3" json:"blood_pressure,omitempty"`
	RespiratoryRate  int32                  `protobuf:"varint,5,opt,name=respiratory_rate,json=respiratoryRate,proto3" json:"respiratory_rate,omitempty"`
	OxygenSaturation int32                  `protobuf:"varint,6,opt,name=oxygen_saturation,json=oxygenSaturation,proto3" json:"oxygen_saturation,omitempty"`
	Pain             int32                  `protobuf:"varint,7,opt,name=pain,proto3" json:"pain,omitempty"`
	RecordedBy       string                 `protobuf:"bytes,8,opt,name=recorded_by,json=recordedBy,proto3" json:"recorded_by,omitempty"`
	Notes            string                 `protobuf:"bytes,10,opt,name=notes,proto3" json:"notes,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddVitalSignRequest) Reset() {
	*x = AddVitalSignRequest{}
	mi := &file_medical_records_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVitalSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVitalSignRequest) ProtoMessage() {}

func (x *AddVitalSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVitalSignRequest.ProtoReflect.Descriptor instead.
func (*AddVitalSignRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{14}
}

func (x *AddVitalSignRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddVitalSignRequest) GetAdmissionId() string {
	if x != nil {
		return x.AdmissionId
	}
	return ""
}

func (x *AddVitalSignRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *AddVitalSignRequest) GetHeartRate() int32 {
	if x != nil {
		return x.HeartRate
	}
	return 0
}

func (x *AddVitalSignRequest) GetBloodPressure() string {
	if x != nil {
		return x.BloodPressure
	}
	return ""
}

func (x *AddVitalSignRequest) GetRespiratoryRate() int32 {
	if x != nil {
		return x.RespiratoryRate
	}
	return 0
}

func (x *AddVitalSignRequest) GetOxygenSaturation() int32 {
	if x != nil {
		return x.OxygenSaturation
	}
	return 0
}

func (x *AddVitalSignRequest) GetPain() int32 {
	if x != nil {
		return x.Pain
	}
	return 0
}

func (x *AddVitalSignRequest) GetRecordedBy() string {
	if x != nil {
		return x.RecordedBy
	}
	return ""
}

func (x *AddVitalSignRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *AddVitalSignRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetVitalSignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVitalSignRequest) Reset() {
	*x = GetVitalSignRequest{}
	mi := &file_medical_records_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVitalSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVitalSignRequest) ProtoMessage() {}

func (x *GetVitalSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVitalSignRequest.ProtoReflect.Descriptor instead.
func (*GetVitalSignRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetVitalSignRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListVitalSignsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // Optional limit for number of records
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVitalSignsRequest) Reset() {
	*x = ListVitalSignsRequest{}
	mi := &file_medical_records_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVitalSignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVitalSignsRequest) ProtoMessage() {}

func (x *ListVitalSignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVitalSignsRequest.ProtoReflect.Descriptor instead.
func (*ListVitalSignsRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListVitalSignsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ListVitalSignsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListVitalSignsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VitalSigns    []*VitalSign           `protobuf:"bytes,1,rep,name=vital_signs,json=vitalSigns,proto3" json:"vital_signs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVitalSignsResponse) Reset() {
	*x = ListVitalSignsResponse{}
	mi := &file_medical_records_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVitalSignsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVitalSignsResponse) ProtoMessage() {}

func (x *ListVitalSignsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVitalSignsResponse.ProtoReflect.Descriptor instead.
func (*ListVitalSignsResponse) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListVitalSignsResponse) GetVitalSigns() []*VitalSign {
	if x != nil {
		return x.VitalSigns
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId     string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	UploadDate    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=upload_date,json=uploadDate,proto3" json:"upload_date,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,7,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	Size          string                 `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Versions      []*DocumentVersion     `protobuf:"bytes,10,rep,name=versions,proto3" json:"versions,omitempty"`
	Url           string                 `protobuf:"bytes,11,opt,name=url,proto3" json:"url,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,12,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	FileType      string                 `protobuf:"bytes,13,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"` // image, pdf, document
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_medical_records_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{18}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Document) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Document) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Document) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Document) GetUploadDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadDate
	}
	return nil
}

func (x *Document) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *Document) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Document) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Document) GetVersions() []*DocumentVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Document) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Document) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Document) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type DocumentVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Version       int32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentVersion) Reset() {
	*x = DocumentVersion{}
	mi := &file_medical_records_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentVersion) ProtoMessage() {}

func (x *DocumentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentVersion.ProtoReflect.Descriptor instead.
func (*DocumentVersion) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{19}
}

func (x *DocumentVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocumentVersion) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DocumentVersion) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DocumentVersion) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *DocumentVersion) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *DocumentVersion) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AddDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	Size          string                 `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	FileType      string                 `protobuf:"bytes,8,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileData      []byte                 `protobuf:"bytes,9,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDocumentRequest) Reset() {
	*x = AddDocumentRequest{}
	mi := &file_medical_records_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentRequest) ProtoMessage() {}

func (x *AddDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{20}
}

func (x *AddDocumentRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddDocumentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDocumentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddDocumentRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AddDocumentRequest) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *AddDocumentRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *AddDocumentRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AddDocumentRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *AddDocumentRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type GetDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	mi := &file_medical_records_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	mi := &file_medical_records_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListDocumentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Category      string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`                       // Optional filter by category
	SearchTerm    string                 `protobuf:"bytes,3,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"` // Optional search term
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsRequest) Reset() {
	*x = ListDocumentsRequest{}
	mi := &file_medical_records_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsRequest) ProtoMessage() {}

func (x *ListDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListDocumentsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ListDocumentsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListDocumentsRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type ListDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsResponse) Reset() {
	*x = ListDocumentsResponse{}
	mi := &file_medical_records_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsResponse) ProtoMessage() {}

func (x *ListDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListDocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type AddDocumentVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,2,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	FileData      []byte                 `protobuf:"bytes,3,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDocumentVersionRequest) Reset() {
	*x = AddDocumentVersionRequest{}
	mi := &file_medical_records_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentVersionRequest) ProtoMessage() {}

func (x *AddDocumentVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentVersionRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentVersionRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{25}
}

func (x *AddDocumentVersionRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *AddDocumentVersionRequest) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *AddDocumentVersionRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type ShareDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UserIds       []string               `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareDocumentRequest) Reset() {
	*x = ShareDocumentRequest{}
	mi := &file_medical_records_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDocumentRequest) ProtoMessage() {}

func (x *ShareDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDocumentRequest.ProtoReflect.Descriptor instead.
func (*ShareDocumentRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{26}
}

func (x *ShareDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ShareDocumentRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role          string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_medical_records_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{27}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` // Optional filter by role
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_medical_records_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListUsersRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_medical_records_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_records_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_medical_records_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_medical_records_service_proto protoreflect.FileDescriptor

const file_medical_records_service_proto_rawDesc = "" +
	"\n" +
	"\x1dmedical_records_service.proto\x12\x16medical_record_service\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\"\x80\x02\n" +
	"\tDiagnosis\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\tR\tpatientId\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1a\n" +
	"\bseverity\x18\x06 \x01(\tR\bseverity\x12.\n" +
	"\x04date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x16\n" +
	"\x06doctor\x18\t \x01(\tR\x06doctor\"\xfa\x01\n" +
	"\x13AddDiagnosisRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bseverity\x18\x05 \x01(\tR\bseverity\x12.\n" +
	"\x04date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x16\n" +
	"\x06doctor\x18\b \x01(\tR\x06doctor\"%\n" +
	"\x13GetDiagnosisRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"(\n" +
	"\x16DeleteDiagnosisRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"n\n" +
	"\x14ListDiagnosesRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\vsearch_term\x18\x03 \x01(\tR\n" +
	"searchTerm\"X\n" +
	"\x15ListDiagnosesResponse\x12?\n" +
	"\tdiagnoses\x18\x01 \x03(\v2!.medical_record_service.DiagnosisR\tdiagnoses\"\xfc\x01\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\tR\tpatientId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\tedited_by\x18\x06 \x03(\v2 .medical_record_service.NoteEditR\beditedBy\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\"X\n" +
	"\bNoteEdit\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"|\n" +
	"\x0eAddNoteRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\" \n" +
	"\x0eGetNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"#\n" +
	"\x11DeleteNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"R\n" +
	"\x10ListNotesRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x1f\n" +
	"\vsearch_term\x18\x02 \x01(\tR\n" +
	"searchTerm\"G\n" +
	"\x11ListNotesResponse\x122\n" +
	"\x05notes\x18\x01 \x03(\v2\x1c.medical_record_service.NoteR\x05notes\"\x98\x03\n" +
	"\tVitalSign\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\tR\tpatientId\x12!\n" +
	"\fadmission_id\x18\v \x01(\tR\vadmissionId\x12.\n" +
	"\x04date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vtemperature\x18\x04 \x01(\x02R\vtemperature\x12\x1d\n" +
	"\n" +
	"heart_rate\x18\x05 \x01(\x05R\theartRate\x12%\n" +
	"\x0eblood_pressure\x18\x06 \x01(\tR\rbloodPressure\x12)\n" +
	"\x10respiratory_rate\x18\a \x01(\x05R\x0frespiratoryRate\x12+\n" +
	"\x11oxygen_saturation\x18\b \x01(\x05R\x10oxygenSaturation\x12\x12\n" +
	"\x04pain\x18\t \x01(\x05R\x04pain\x12\x1f\n" +
	"\vrecorded_by\x18\n" +
	" \x01(\tR\n" +
	"recordedBy\x12\x14\n" +
	"\x05notes\x18\f \x01(\tR\x05notes\"\x92\x03\n" +
	"\x13AddVitalSignRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12!\n" +
	"\fadmission_id\x18\t \x01(\tR\vadmissionId\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x02R\vtemperature\x12\x1d\n" +
	"\n" +
	"heart_rate\x18\x03 \x01(\x05R\theartRate\x12%\n" +
	"\x0eblood_pressure\x18\x04 \x01(\tR\rbloodPressure\x12)\n" +
	"\x10respiratory_rate\x18\x05 \x01(\x05R\x0frespiratoryRate\x12+\n" +
	"\x11oxygen_saturation\x18\x06 \x01(\x05R\x10oxygenSaturation\x12\x12\n" +
	"\x04pain\x18\a \x01(\x05R\x04pain\x12\x1f\n" +
	"\vrecorded_by\x18\b \x01(\tR\n" +
	"recordedBy\x12\x14\n" +
	"\x05notes\x18\n" +
	" \x01(\tR\x05notes\x12.\n" +
	"\x04date\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"%\n" +
	"\x13GetVitalSignRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x15ListVitalSignsRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\\\n" +
	"\x16ListVitalSignsResponse\x12B\n" +
	"\vvital_signs\x18\x01 \x03(\v2!.medical_record_service.VitalSignR\n" +
	"vitalSigns\"\xaa\x03\n" +
	"\bDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\tR\tpatientId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12;\n" +
	"\vupload_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"uploadDate\x12\x1f\n" +
	"\vuploaded_by\x18\a \x01(\tR\n" +
	"uploadedBy\x12\x12\n" +
	"\x04size\x18\b \x01(\tR\x04size\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12C\n" +
	"\bversions\x18\n" +
	" \x03(\v2'.medical_record_service.DocumentVersionR\bversions\x12\x10\n" +
	"\x03url\x18\v \x01(\tR\x03url\x12#\n" +
	"\rthumbnail_url\x18\f \x01(\tR\fthumbnailUrl\x12\x1b\n" +
	"\tfile_type\x18\r \x01(\tR\bfileType\"\xbf\x01\n" +
	"\x0fDocumentVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x05R\aversion\x12.\n" +
	"\x04date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1f\n" +
	"\vuploaded_by\x18\x05 \x01(\tR\n" +
	"uploadedBy\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\"\x88\x02\n" +
	"\x12AddDocumentRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x1f\n" +
	"\vuploaded_by\x18\x05 \x01(\tR\n" +
	"uploadedBy\x12\x12\n" +
	"\x04size\x18\x06 \x01(\tR\x04size\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x1b\n" +
	"\tfile_type\x18\b \x01(\tR\bfileType\x12\x1b\n" +
	"\tfile_data\x18\t \x01(\fR\bfileData\"$\n" +
	"\x12GetDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"'\n" +
	"\x15DeleteDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"r\n" +
	"\x14ListDocumentsRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\tR\tpatientId\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12\x1f\n" +
	"\vsearch_term\x18\x03 \x01(\tR\n" +
	"searchTerm\"W\n" +
	"\x15ListDocumentsResponse\x12>\n" +
	"\tdocuments\x18\x01 \x03(\v2 .medical_record_service.DocumentR\tdocuments\"z\n" +
	"\x19AddDocumentVersionRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x1f\n" +
	"\vuploaded_by\x18\x02 \x01(\tR\n" +
	"uploadedBy\x12\x1b\n" +
	"\tfile_data\x18\x03 \x01(\fR\bfileData\"R\n" +
	"\x14ShareDocumentRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x19\n" +
	"\buser_ids\x18\x02 \x03(\tR\auserIds\">\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\"&\n" +
	"\x10ListUsersRequest\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\"G\n" +
	"\x11ListUsersResponse\x122\n" +
	"\x05users\x18\x01 \x03(\v2\x1c.medical_record_service.UserR\x05users2\xcf\x14\n" +
	"\x14MedicalRecordService\x12\x8d\x01\n" +
	"\fAddDiagnosis\x12+.medical_record_service.AddDiagnosisRequest\x1a!.medical_record_service.Diagnosis\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/records/{patient_id}/diagnoses\x12z\n" +
	"\fGetDiagnosis\x12+.medical_record_service.GetDiagnosisRequest\x1a!.medical_record_service.Diagnosis\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/diagnoses/{id}\x12v\n" +
	"\x0fUpdateDiagnosis\x12!.medical_record_service.Diagnosis\x1a!.medical_record_service.Diagnosis\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\x1a\x12/v1/diagnoses/{id}\x12u\n" +
	"\x0fDeleteDiagnosis\x12..medical_record_service.DeleteDiagnosisRequest\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/v1/diagnoses/{id}\x12\x98\x01\n" +
	"\rListDiagnoses\x12,.medical_record_service.ListDiagnosesRequest\x1a-.medical_record_service.ListDiagnosesResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/records/{patient_id}/diagnoses\x12z\n" +
	"\aAddNote\x12&.medical_record_service.AddNoteRequest\x1a\x1c.medical_record_service.Note\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/records/{patient_id}/notes\x12g\n" +
	"\aGetNote\x12&.medical_record_service.GetNoteRequest\x1a\x1c.medical_record_service.Note\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/notes/{id}\x12c\n" +
	"\n" +
	"UpdateNote\x12\x1c.medical_record_service.Note\x1a\x1c.medical_record_service.Note\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\x1a\x0e/v1/notes/{id}\x12g\n" +
	"\n" +
	"DeleteNote\x12).medical_record_service.DeleteNoteRequest\x1a\x16.google.protobuf.Empty\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/v1/notes/{id}\x12\x88\x01\n" +
	"\tListNotes\x12(.medical_record_service.ListNotesRequest\x1a).medical_record_service.ListNotesResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/records/{patient_id}/notes\x12\x8f\x01\n" +
	"\fAddVitalSign\x12+.medical_record_service.AddVitalSignRequest\x1a!.medical_record_service.VitalSign\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/records/{patient_id}/vital-signs\x12|\n" +
	"\fGetVitalSign\x12+.medical_record_service.GetVitalSignRequest\x1a!.medical_record_service.VitalSign\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/vital-signs/{id}\x12\x9d\x01\n" +
	"\x0eListVitalSigns\x12-.medical_record_service.ListVitalSignsRequest\x1a..medical_record_service.ListVitalSignsResponse\",\x82\xd3\xe4\x93\x02&\x12$/v1/records/{patient_id}/vital-signs\x12\x8a\x01\n" +
	"\vAddDocument\x12*.medical_record_service.AddDocumentRequest\x1a .medical_record_service.Document\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/records/{patient_id}/documents\x12w\n" +
	"\vGetDocument\x12*.medical_record_service.GetDocumentRequest\x1a .medical_record_service.Document\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/documents/{id}\x12s\n" +
	"\x0eUpdateDocument\x12 .medical_record_service.Document\x1a .medical_record_service.Document\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\x1a\x12/v1/documents/{id}\x12s\n" +
	"\x0eDeleteDocument\x12-.medical_record_service.DeleteDocumentRequest\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/v1/documents/{id}\x12\x98\x01\n" +
	"\rListDocuments\x12,.medical_record_service.ListDocumentsRequest\x1a-.medical_record_service.ListDocumentsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/records/{patient_id}/documents\x12\xa1\x01\n" +
	"\x12AddDocumentVersion\x121.medical_record_service.AddDocumentVersionRequest\x1a'.medical_record_service.DocumentVersion\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/documents/{document_id}/versions\x12\x83\x01\n" +
	"\rShareDocument\x12,.medical_record_service.ShareDocumentRequest\x1a\x16.google.protobuf.Empty\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/documents/{document_id}/shareB*Z(./services/medical-records-service/protob\x06proto3"

var (
	file_medical_records_service_proto_rawDescOnce sync.Once
	file_medical_records_service_proto_rawDescData []byte
)

func file_medical_records_service_proto_rawDescGZIP() []byte {
	file_medical_records_service_proto_rawDescOnce.Do(func() {
		file_medical_records_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_medical_records_service_proto_rawDesc), len(file_medical_records_service_proto_rawDesc)))
	})
	return file_medical_records_service_proto_rawDescData
}

var file_medical_records_service_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_medical_records_service_proto_goTypes = []any{
	(*Diagnosis)(nil),                 // 0: medical_record_service.Diagnosis
	(*AddDiagnosisRequest)(nil),       // 1: medical_record_service.AddDiagnosisRequest
	(*GetDiagnosisRequest)(nil),       // 2: medical_record_service.GetDiagnosisRequest
	(*DeleteDiagnosisRequest)(nil),    // 3: medical_record_service.DeleteDiagnosisRequest
	(*ListDiagnosesRequest)(nil),      // 4: medical_record_service.ListDiagnosesRequest
	(*ListDiagnosesResponse)(nil),     // 5: medical_record_service.ListDiagnosesResponse
	(*Note)(nil),                      // 6: medical_record_service.Note
	(*NoteEdit)(nil),                  // 7: medical_record_service.NoteEdit
	(*AddNoteRequest)(nil),            // 8: medical_record_service.AddNoteRequest
	(*GetNoteRequest)(nil),            // 9: medical_record_service.GetNoteRequest
	(*DeleteNoteRequest)(nil),         // 10: medical_record_service.DeleteNoteRequest
	(*ListNotesRequest)(nil),          // 11: medical_record_service.ListNotesRequest
	(*ListNotesResponse)(nil),         // 12: medical_record_service.ListNotesResponse
	(*VitalSign)(nil),                 // 13: medical_record_service.VitalSign
	(*AddVitalSignRequest)(nil),       // 14: medical_record_service.AddVitalSignRequest
	(*GetVitalSignRequest)(nil),       // 15: medical_record_service.GetVitalSignRequest
	(*ListVitalSignsRequest)(nil),     // 16: medical_record_service.ListVitalSignsRequest
	(*ListVitalSignsResponse)(nil),    // 17: medical_record_service.ListVitalSignsResponse
	(*Document)(nil),                  // 18: medical_record_service.Document
	(*DocumentVersion)(nil),           // 19: medical_record_service.DocumentVersion
	(*AddDocumentRequest)(nil),        // 20: medical_record_service.AddDocumentRequest
	(*GetDocumentRequest)(nil),        // 21: medical_record_service.GetDocumentRequest
	(*DeleteDocumentRequest)(nil),     // 22: medical_record_service.DeleteDocumentRequest
	(*ListDocumentsRequest)(nil),      // 23: medical_record_service.ListDocumentsRequest
	(*ListDocumentsResponse)(nil),     // 24: medical_record_service.ListDocumentsResponse
	(*AddDocumentVersionRequest)(nil), // 25: medical_record_service.AddDocumentVersionRequest
	(*ShareDocumentRequest)(nil),      // 26: medical_record_service.ShareDocumentRequest
	(*User)(nil),                      // 27: medical_record_service.User
	(*ListUsersRequest)(nil),          // 28: medical_record_service.ListUsersRequest
	(*ListUsersResponse)(nil),         // 29: medical_record_service.ListUsersResponse
	(*timestamppb.Timestamp)(nil),     // 30: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 31: google.protobuf.Empty
}
var file_medical_records_service_proto_depIdxs = []int32{
	30, // 0: medical_record_service.Diagnosis.date:type_name -> google.protobuf.Timestamp
	30, // 1: medical_record_service.AddDiagnosisRequest.date:type_name -> google.protobuf.Timestamp
	0,  // 2: medical_record_service.ListDiagnosesResponse.diagnoses:type_name -> medical_record_service.Diagnosis
	30, // 3: medical_record_service.Note.created_at:type_name -> google.protobuf.Timestamp
	7,  // 4: medical_record_service.Note.edited_by:type_name -> medical_record_service.NoteEdit
	30, // 5: medical_record_service.NoteEdit.timestamp:type_name -> google.protobuf.Timestamp
	6,  // 6: medical_record_service.ListNotesResponse.notes:type_name -> medical_record_service.Note
	30, // 7: medical_record_service.VitalSign.date:type_name -> google.protobuf.Timestamp
	30, // 8: medical_record_service.AddVitalSignRequest.date:type_name -> google.protobuf.Timestamp
	13, // 9: medical_record_service.ListVitalSignsResponse.vital_signs:type_name -> medical_record_service.VitalSign
	30, // 10: medical_record_service.Document.upload_date:type_name -> google.protobuf.Timestamp
	19, // 11: medical_record_service.Document.versions:type_name -> medical_record_service.DocumentVersion
	30, // 12: medical_record_service.DocumentVersion.date:type_name -> google.protobuf.Timestamp
	18, // 13: medical_record_service.ListDocumentsResponse.documents:type_name -> medical_record_service.Document
	27, // 14: medical_record_service.ListUsersResponse.users:type_name -> medical_record_service.User
	1,  // 15: medical_record_service.MedicalRecordService.AddDiagnosis:input_type -> medical_record_service.AddDiagnosisRequest
	2,  // 16: medical_record_service.MedicalRecordService.GetDiagnosis:input_type -> medical_record_service.GetDiagnosisRequest
	0,  // 17: medical_record_service.MedicalRecordService.UpdateDiagnosis:input_type -> medical_record_service.Diagnosis
	3,  // 18: medical_record_service.MedicalRecordService.DeleteDiagnosis:input_type -> medical_record_service.DeleteDiagnosisRequest
	4,  // 19: medical_record_service.MedicalRecordService.ListDiagnoses:input_type -> medical_record_service.ListDiagnosesRequest
	8,  // 20: medical_record_service.MedicalRecordService.AddNote:input_type -> medical_record_service.AddNoteRequest
	9,  // 21: medical_record_service.MedicalRecordService.GetNote:input_type -> medical_record_service.GetNoteRequest
	6,  // 22: medical_record_service.MedicalRecordService.UpdateNote:input_type -> medical_record_service.Note
	10, // 23: medical_record_service.MedicalRecordService.DeleteNote:input_type -> medical_record_service.DeleteNoteRequest
	11, // 24: medical_record_service.MedicalRecordService.ListNotes:input_type -> medical_record_service.ListNotesRequest
	14, // 25: medical_record_service.MedicalRecordService.AddVitalSign:input_type -> medical_record_service.AddVitalSignRequest
	15, // 26: medical_record_service.MedicalRecordService.GetVitalSign:input_type -> medical_record_service.GetVitalSignRequest
	16, // 27: medical_record_service.MedicalRecordService.ListVitalSigns:input_type -> medical_record_service.ListVitalSignsRequest
	20, // 28: medical_record_service.MedicalRecordService.AddDocument:input_type -> medical_record_service.AddDocumentRequest
	21, // 29: medical_record_service.MedicalRecordService.GetDocument:input_type -> medical_record_service.GetDocumentRequest
	18, // 30: medical_record_service.MedicalRecordService.UpdateDocument:input_type -> medical_record_service.Document
	22, // 31: medical_record_service.MedicalRecordService.DeleteDocument:input_type -> medical_record_service.DeleteDocumentRequest
	23, // 32: medical_record_service.MedicalRecordService.ListDocuments:input_type -> medical_record_service.ListDocumentsRequest
	25, // 33: medical_record_service.MedicalRecordService.AddDocumentVersion:input_type -> medical_record_service.AddDocumentVersionRequest
	26, // 34: medical_record_service.MedicalRecordService.ShareDocument:input_type -> medical_record_service.ShareDocumentRequest
	0,  // 35: medical_record_service.MedicalRecordService.AddDiagnosis:output_type -> medical_record_service.Diagnosis
	0,  // 36: medical_record_service.MedicalRecordService.GetDiagnosis:output_type -> medical_record_service.Diagnosis
	0,  // 37: medical_record_service.MedicalRecordService.UpdateDiagnosis:output_type -> medical_record_service.Diagnosis
	31, // 38: medical_record_service.MedicalRecordService.DeleteDiagnosis:output_type -> google.protobuf.Empty
	5,  // 39: medical_record_service.MedicalRecordService.ListDiagnoses:output_type -> medical_record_service.ListDiagnosesResponse
	6,  // 40: medical_record_service.MedicalRecordService.AddNote:output_type -> medical_record_service.Note
	6,  // 41: medical_record_service.MedicalRecordService.GetNote:output_type -> medical_record_service.Note
	6,  // 42: medical_record_service.MedicalRecordService.UpdateNote:output_type -> medical_record_service.Note
	31, // 43: medical_record_service.MedicalRecordService.DeleteNote:output_type -> google.protobuf.Empty
	12, // 44: medical_record_service.MedicalRecordService.ListNotes:output_type -> medical_record_service.ListNotesResponse
	13, // 45: medical_record_service.MedicalRecordService.AddVitalSign:output_type -> medical_record_service.VitalSign
	13, // 46: medical_record_service.MedicalRecordService.GetVitalSign:output_type -> medical_record_service.VitalSign
	17, // 47: medical_record_service.MedicalRecordService.ListVitalSigns:output_type -> medical_record_service.ListVitalSignsResponse
	18, // 48: medical_record_service.MedicalRecordService.AddDocument:output_type -> medical_record_service.Document
	18, // 49: medical_record_service.MedicalRecordService.GetDocument:output_type -> medical_record_service.Document
	18, // 50: medical_record_service.MedicalRecordService.UpdateDocument:output_type -> medical_record_service.Document
	31, // 51: medical_record_service.MedicalRecordService.DeleteDocument:output_type -> google.protobuf.Empty
	24, // 52: medical_record_service.MedicalRecordService.ListDocuments:output_type -> medical_record_service.ListDocumentsResponse
	19, // 53: medical_record_service.MedicalRecordService.AddDocumentVersion:output_type -> medical_record_service.DocumentVersion
	31, // 54: medical_record_service.MedicalRecordService.ShareDocument:output_type -> google.protobuf.Empty
	35, // [35:55] is the sub-list for method output_type
	15, // [15:35] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_medical_records_service_proto_init() }
func file_medical_records_service_proto_init() {
	if File_medical_records_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_medical_records_service_proto_rawDesc), len(file_medical_records_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_medical_records_service_proto_goTypes,
		DependencyIndexes: file_medical_records_service_proto_depIdxs,
		MessageInfos:      file_medical_records_service_proto_msgTypes,
	}.Build()
	File_medical_records_service_proto = out.File
	file_medical_records_service_proto_goTypes = nil
	file_medical_records_service_proto_depIdxs = nil
}
