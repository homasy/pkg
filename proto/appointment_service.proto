// appointment_service.proto

syntax = "proto3";

package appointment_service;

import "google/api/annotations.proto";

<<<<<<< HEAD
option go_package = "./services/appointment-service/proto";
=======
option go_package = "./shared/appointment-service/proto";
>>>>>>> 5d2e7a4 (Updated routes)

// AppointmentService defines the service for managing appointments
service AppointmentService {

  // Creates an appointment
  rpc CreateAppointment (CreateAppointmentRequest) returns (CreateAppointmentResponse) {
    option (google.api.http) = {
      post: "/v1/appointments"
      body: "*"
    };
  }

  // Retrieves an appointment by ID
  rpc GetAppointment (GetAppointmentRequest) returns (GetAppointmentResponse) {
    option (google.api.http) = {
      get: "/v1/appointment/{appointment_id}"
    };
  }

  // Updates an appointment
  rpc UpdateAppointment (UpdateAppointmentRequest) returns (UpdateAppointmentResponse) {
    option (google.api.http) = {
      put: "/v1/appointment/{appointment_id}"
      body: "*"
    };
  }

  // Deletes an appointment
  rpc DeleteAppointment (DeleteAppointmentRequest) returns (DeleteAppointmentResponse) {
    option (google.api.http) = {
      delete: "/v1/appointment/{appointment_id}"
    };
  }

  // Lists all appointments (filter by patient_id or doctor_id if needed)
  rpc ListAppointments (ListAppointmentsRequest) returns (ListAppointmentsResponse) {
    option (google.api.http) = {
      get: "/v1/appointments"
    };
  }

  // Creates a queue
  rpc CreateQueue (CreateQueueRequest) returns (CreateQueueResponse) {
    option (google.api.http) = {
      post: "/v1/queues"
      body: "*"
    };
  }

  // Lists all queues
  rpc ListQueues (ListQueueRequest) returns (ListQueueResponse) {
    option (google.api.http) = {
      get: "/v1/queues"
    };
  }

  rpc UpdateQueueStatus (UpdateQueueStatusRequest) returns (UpdateQueueStatusResponse) {
    option (google.api.http) = {
        put: "/v1/queues/{queue_id}/status"
        body: "*"
    };
  }

  // Get appointments by patient ID
  rpc GetAppointmentsByPatientId (GetAppointmentsByPatientIdRequest) returns (ListAppointmentsResponse) {
    option (google.api.http) = {
      get: "/v1/appointments/patient/{patient_id}"
    };
  }

  // Get queues by doctor ID
  rpc GetQueuesByDoctorId (GetQueuesByDoctorIdRequest) returns (ListQueueResponse) {
    option (google.api.http) = {
      get: "/v1/queues/doctor/{doctor_id}"
    };
  }

}

// Create Appointment request
message CreateAppointmentRequest {
  string patient_id = 1;
  string doctor_id = 2;
  string preferred_date = 3;
  string preferred_time = 4;
  string appointment_type = 5;
  string specialist_category = 6;
  string description = 7;
  string status = 8;
  bool sms_reminder_sent = 9;
  string created_at = 10;
}

// Create Appointment response
message CreateAppointmentResponse {
  string appointment_id = 1;
  string status = 2;
}

message CreateQueueRequest {
  string patient_id = 1;
  string doctor_id = 2;
  string arrival_date = 3;
  string arrival_time = 4;
  string priority = 5;
  string description = 6;
  string status = 7;
}

message CreateQueueResponse {
  string queue_id = 1;
  string status = 2;
}



// Get Appointment request
message GetAppointmentRequest {
  string appointment_id = 1;
}

// Get Appointment response
message GetAppointmentResponse {
  string appointment_id = 1;
  string patient_id = 2;
  string doctor_id = 3;
  string preferred_date = 4;
  string preferred_time = 5;
  string appointment_type = 6;
  string specialist_category = 7;
  string description = 8;
  string status = 9;
  bool sms_reminder_sent = 10;
  string created_at = 11;
}

// Update Appointment request
message UpdateAppointmentRequest {
  string appointment_id = 1;
  string patient_id = 2;
  string doctor_id = 3;
  string preferred_date = 4;
  string preferred_time = 5;
  string appointment_type = 6; 
  string specialist_category = 7;
  string description = 8;
  string status = 9;
  bool sms_reminder_sent = 10;
  string created_at = 11;
}

// Update Appointment response
message UpdateAppointmentResponse {
  bool success = 1;
}

// Delete Appointment request
message DeleteAppointmentRequest {
  string appointment_id = 1;
}

// Delete Appointment response
message DeleteAppointmentResponse {
  bool success = 1;
}

// Appointment data structure
message Appointment {
  string appointment_id = 1;
  string patient_id = 2;
  string doctor_id = 3;
  string preferred_date = 4;
  string preferred_time = 5;
  string appointment_type = 6;
  string specialist_category = 7;
  string description = 8;
  string status = 9;
  bool sms_reminder_sent = 10;
  string created_at = 11;
}

message ListAppointmentsRequest {}

message ListAppointmentsResponse {
  repeated Appointment appointments = 1;
}

message Queue {
  string queue_id = 1;
  string patient_id = 2;
  string doctor_id = 3;
  string arrival_date = 4;
  string arrival_time = 5;
  string priority = 6;
  string description = 7;
  string status = 8;
}

message ListQueueRequest {}

message ListQueueResponse {
  repeated Queue queues = 1;
}

message GetAppointmentsByPatientIdRequest {
  string patient_id = 1;
}

message GetQueuesByDoctorIdRequest {
  string doctor_id = 1;
}

message UpdateQueueStatusRequest {
  string queue_id = 1;
  string new_status = 2; // "pending" or "completed"
}

message UpdateQueueStatusResponse {
  bool success = 1;
}